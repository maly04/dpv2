/**
 * Direct Portal REST API
 * The Direct Portal REST API
 *
 * OpenAPI spec version: v1
 * Contact: info@direct-portal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DirectPortalRestApi);
  }
}(this, function(expect, DirectPortalRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DirectPortalRestApi.PermissionApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PermissionApi', function() {
    describe('apiPermissionActivateByIdGet', function() {
      it('should call apiPermissionActivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionActivateByIdGet
        //instance.apiPermissionActivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionActiveGet', function() {
      it('should call apiPermissionActiveGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionActiveGet
        //instance.apiPermissionActiveGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionByIdGet', function() {
      it('should call apiPermissionByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionByIdGet
        //instance.apiPermissionByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionByNameByIdGet', function() {
      it('should call apiPermissionByNameByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionByNameByIdGet
        //instance.apiPermissionByNameByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionByNamePost', function() {
      it('should call apiPermissionByNamePost successfully', function(done) {
        //uncomment below and update the code to test apiPermissionByNamePost
        //instance.apiPermissionByNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionContactAddressesByIdGet', function() {
      it('should call apiPermissionContactAddressesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionContactAddressesByIdGet
        //instance.apiPermissionContactAddressesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionContactAddressesByIdPost', function() {
      it('should call apiPermissionContactAddressesByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiPermissionContactAddressesByIdPost
        //instance.apiPermissionContactAddressesByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionContactDetailsByIdGet', function() {
      it('should call apiPermissionContactDetailsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionContactDetailsByIdGet
        //instance.apiPermissionContactDetailsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionContactDetailsByIdPost', function() {
      it('should call apiPermissionContactDetailsByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiPermissionContactDetailsByIdPost
        //instance.apiPermissionContactDetailsByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionDeactivateByIdGet', function() {
      it('should call apiPermissionDeactivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionDeactivateByIdGet
        //instance.apiPermissionDeactivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionGet', function() {
      it('should call apiPermissionGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionGet
        //instance.apiPermissionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionNotesByIdGet', function() {
      it('should call apiPermissionNotesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionNotesByIdGet
        //instance.apiPermissionNotesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionPost', function() {
      it('should call apiPermissionPost successfully', function(done) {
        //uncomment below and update the code to test apiPermissionPost
        //instance.apiPermissionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionPut', function() {
      it('should call apiPermissionPut successfully', function(done) {
        //uncomment below and update the code to test apiPermissionPut
        //instance.apiPermissionPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionRelationshipsByIdGet', function() {
      it('should call apiPermissionRelationshipsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionRelationshipsByIdGet
        //instance.apiPermissionRelationshipsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionSetAsDefaultByIdGet', function() {
      it('should call apiPermissionSetAsDefaultByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionSetAsDefaultByIdGet
        //instance.apiPermissionSetAsDefaultByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPermissionTranslationsByIdGet', function() {
      it('should call apiPermissionTranslationsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiPermissionTranslationsByIdGet
        //instance.apiPermissionTranslationsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
