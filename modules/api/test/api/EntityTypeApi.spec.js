/**
 * Direct Portal REST API
 * The Direct Portal REST API
 *
 * OpenAPI spec version: v1
 * Contact: info@direct-portal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DirectPortalRestApi);
  }
}(this, function(expect, DirectPortalRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DirectPortalRestApi.EntityTypeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EntityTypeApi', function() {
    describe('apiEntityTypeActivateByIdGet', function() {
      it('should call apiEntityTypeActivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeActivateByIdGet
        //instance.apiEntityTypeActivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeActiveGet', function() {
      it('should call apiEntityTypeActiveGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeActiveGet
        //instance.apiEntityTypeActiveGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeByIdGet', function() {
      it('should call apiEntityTypeByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeByIdGet
        //instance.apiEntityTypeByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeByNameByIdGet', function() {
      it('should call apiEntityTypeByNameByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeByNameByIdGet
        //instance.apiEntityTypeByNameByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeByNamePost', function() {
      it('should call apiEntityTypeByNamePost successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeByNamePost
        //instance.apiEntityTypeByNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeContactAddressesByIdGet', function() {
      it('should call apiEntityTypeContactAddressesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeContactAddressesByIdGet
        //instance.apiEntityTypeContactAddressesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeContactAddressesByIdPost', function() {
      it('should call apiEntityTypeContactAddressesByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeContactAddressesByIdPost
        //instance.apiEntityTypeContactAddressesByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeContactDetailsByIdGet', function() {
      it('should call apiEntityTypeContactDetailsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeContactDetailsByIdGet
        //instance.apiEntityTypeContactDetailsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeContactDetailsByIdPost', function() {
      it('should call apiEntityTypeContactDetailsByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeContactDetailsByIdPost
        //instance.apiEntityTypeContactDetailsByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeDeactivateByIdGet', function() {
      it('should call apiEntityTypeDeactivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeDeactivateByIdGet
        //instance.apiEntityTypeDeactivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeGet', function() {
      it('should call apiEntityTypeGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeGet
        //instance.apiEntityTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeNotesByIdGet', function() {
      it('should call apiEntityTypeNotesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeNotesByIdGet
        //instance.apiEntityTypeNotesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypePost', function() {
      it('should call apiEntityTypePost successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypePost
        //instance.apiEntityTypePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypePut', function() {
      it('should call apiEntityTypePut successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypePut
        //instance.apiEntityTypePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeRelationshipsByIdGet', function() {
      it('should call apiEntityTypeRelationshipsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeRelationshipsByIdGet
        //instance.apiEntityTypeRelationshipsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeSetAsDefaultByIdGet', function() {
      it('should call apiEntityTypeSetAsDefaultByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeSetAsDefaultByIdGet
        //instance.apiEntityTypeSetAsDefaultByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiEntityTypeTranslationsByIdGet', function() {
      it('should call apiEntityTypeTranslationsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiEntityTypeTranslationsByIdGet
        //instance.apiEntityTypeTranslationsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
