/**
 * Direct Portal REST API
 * The Direct Portal REST API
 *
 * OpenAPI spec version: v1
 * Contact: info@direct-portal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DirectPortalRestApi);
  }
}(this, function(expect, DirectPortalRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DirectPortalRestApi.TranslationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TranslationApi', function() {
    describe('apiTranslationActivateByIdGet', function() {
      it('should call apiTranslationActivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationActivateByIdGet
        //instance.apiTranslationActivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationActiveGet', function() {
      it('should call apiTranslationActiveGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationActiveGet
        //instance.apiTranslationActiveGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationByIdGet', function() {
      it('should call apiTranslationByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationByIdGet
        //instance.apiTranslationByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationByNameByIdGet', function() {
      it('should call apiTranslationByNameByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationByNameByIdGet
        //instance.apiTranslationByNameByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationByNamePost', function() {
      it('should call apiTranslationByNamePost successfully', function(done) {
        //uncomment below and update the code to test apiTranslationByNamePost
        //instance.apiTranslationByNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationContactAddressesByIdGet', function() {
      it('should call apiTranslationContactAddressesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationContactAddressesByIdGet
        //instance.apiTranslationContactAddressesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationContactAddressesByIdPost', function() {
      it('should call apiTranslationContactAddressesByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiTranslationContactAddressesByIdPost
        //instance.apiTranslationContactAddressesByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationContactDetailsByIdGet', function() {
      it('should call apiTranslationContactDetailsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationContactDetailsByIdGet
        //instance.apiTranslationContactDetailsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationContactDetailsByIdPost', function() {
      it('should call apiTranslationContactDetailsByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiTranslationContactDetailsByIdPost
        //instance.apiTranslationContactDetailsByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationDeactivateByIdGet', function() {
      it('should call apiTranslationDeactivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationDeactivateByIdGet
        //instance.apiTranslationDeactivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationGet', function() {
      it('should call apiTranslationGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationGet
        //instance.apiTranslationGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationNotesByIdGet', function() {
      it('should call apiTranslationNotesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationNotesByIdGet
        //instance.apiTranslationNotesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationPost', function() {
      it('should call apiTranslationPost successfully', function(done) {
        //uncomment below and update the code to test apiTranslationPost
        //instance.apiTranslationPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationPut', function() {
      it('should call apiTranslationPut successfully', function(done) {
        //uncomment below and update the code to test apiTranslationPut
        //instance.apiTranslationPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationRelationshipsByIdGet', function() {
      it('should call apiTranslationRelationshipsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationRelationshipsByIdGet
        //instance.apiTranslationRelationshipsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationSetAsDefaultByIdGet', function() {
      it('should call apiTranslationSetAsDefaultByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationSetAsDefaultByIdGet
        //instance.apiTranslationSetAsDefaultByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTranslationTranslationsByIdGet', function() {
      it('should call apiTranslationTranslationsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTranslationTranslationsByIdGet
        //instance.apiTranslationTranslationsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
