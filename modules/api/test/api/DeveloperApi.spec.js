/**
 * Direct Portal REST API
 * The Direct Portal REST API
 *
 * OpenAPI spec version: v1
 * Contact: info@direct-portal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DirectPortalRestApi);
  }
}(this, function(expect, DirectPortalRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DirectPortalRestApi.DeveloperApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeveloperApi', function() {
    describe('apiDeveloperActivateByIdGet', function() {
      it('should call apiDeveloperActivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperActivateByIdGet
        //instance.apiDeveloperActivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperActiveGet', function() {
      it('should call apiDeveloperActiveGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperActiveGet
        //instance.apiDeveloperActiveGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperByIdGet', function() {
      it('should call apiDeveloperByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperByIdGet
        //instance.apiDeveloperByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperByNameByIdGet', function() {
      it('should call apiDeveloperByNameByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperByNameByIdGet
        //instance.apiDeveloperByNameByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperByNamePost', function() {
      it('should call apiDeveloperByNamePost successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperByNamePost
        //instance.apiDeveloperByNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperContactAddressesByIdGet', function() {
      it('should call apiDeveloperContactAddressesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperContactAddressesByIdGet
        //instance.apiDeveloperContactAddressesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperContactAddressesByIdPost', function() {
      it('should call apiDeveloperContactAddressesByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperContactAddressesByIdPost
        //instance.apiDeveloperContactAddressesByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperContactDetailsByIdGet', function() {
      it('should call apiDeveloperContactDetailsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperContactDetailsByIdGet
        //instance.apiDeveloperContactDetailsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperContactDetailsByIdPost', function() {
      it('should call apiDeveloperContactDetailsByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperContactDetailsByIdPost
        //instance.apiDeveloperContactDetailsByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperDeactivateByIdGet', function() {
      it('should call apiDeveloperDeactivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperDeactivateByIdGet
        //instance.apiDeveloperDeactivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperGet', function() {
      it('should call apiDeveloperGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperGet
        //instance.apiDeveloperGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperNotesByIdGet', function() {
      it('should call apiDeveloperNotesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperNotesByIdGet
        //instance.apiDeveloperNotesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperPost', function() {
      it('should call apiDeveloperPost successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperPost
        //instance.apiDeveloperPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperPut', function() {
      it('should call apiDeveloperPut successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperPut
        //instance.apiDeveloperPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperRelationshipsByIdGet', function() {
      it('should call apiDeveloperRelationshipsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperRelationshipsByIdGet
        //instance.apiDeveloperRelationshipsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperSetAsDefaultByIdGet', function() {
      it('should call apiDeveloperSetAsDefaultByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperSetAsDefaultByIdGet
        //instance.apiDeveloperSetAsDefaultByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDeveloperTranslationsByIdGet', function() {
      it('should call apiDeveloperTranslationsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDeveloperTranslationsByIdGet
        //instance.apiDeveloperTranslationsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
