/**
 * Direct Portal REST API
 * The Direct Portal REST API
 *
 * OpenAPI spec version: v1
 * Contact: info@direct-portal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DirectPortalRestApi);
  }
}(this, function(expect, DirectPortalRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DirectPortalRestApi.FeatureTypeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FeatureTypeApi', function() {
    describe('apiFeatureTypeActivateByIdGet', function() {
      it('should call apiFeatureTypeActivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeActivateByIdGet
        //instance.apiFeatureTypeActivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeActiveGet', function() {
      it('should call apiFeatureTypeActiveGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeActiveGet
        //instance.apiFeatureTypeActiveGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeByIdGet', function() {
      it('should call apiFeatureTypeByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeByIdGet
        //instance.apiFeatureTypeByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeByNameByIdGet', function() {
      it('should call apiFeatureTypeByNameByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeByNameByIdGet
        //instance.apiFeatureTypeByNameByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeByNamePost', function() {
      it('should call apiFeatureTypeByNamePost successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeByNamePost
        //instance.apiFeatureTypeByNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeContactAddressesByIdGet', function() {
      it('should call apiFeatureTypeContactAddressesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeContactAddressesByIdGet
        //instance.apiFeatureTypeContactAddressesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeContactAddressesByIdPost', function() {
      it('should call apiFeatureTypeContactAddressesByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeContactAddressesByIdPost
        //instance.apiFeatureTypeContactAddressesByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeContactDetailsByIdGet', function() {
      it('should call apiFeatureTypeContactDetailsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeContactDetailsByIdGet
        //instance.apiFeatureTypeContactDetailsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeContactDetailsByIdPost', function() {
      it('should call apiFeatureTypeContactDetailsByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeContactDetailsByIdPost
        //instance.apiFeatureTypeContactDetailsByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeDeactivateByIdGet', function() {
      it('should call apiFeatureTypeDeactivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeDeactivateByIdGet
        //instance.apiFeatureTypeDeactivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeGet', function() {
      it('should call apiFeatureTypeGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeGet
        //instance.apiFeatureTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeNotesByIdGet', function() {
      it('should call apiFeatureTypeNotesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeNotesByIdGet
        //instance.apiFeatureTypeNotesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypePost', function() {
      it('should call apiFeatureTypePost successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypePost
        //instance.apiFeatureTypePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypePut', function() {
      it('should call apiFeatureTypePut successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypePut
        //instance.apiFeatureTypePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeRelationshipsByIdGet', function() {
      it('should call apiFeatureTypeRelationshipsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeRelationshipsByIdGet
        //instance.apiFeatureTypeRelationshipsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeSetAsDefaultByIdGet', function() {
      it('should call apiFeatureTypeSetAsDefaultByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeSetAsDefaultByIdGet
        //instance.apiFeatureTypeSetAsDefaultByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFeatureTypeTranslationsByIdGet', function() {
      it('should call apiFeatureTypeTranslationsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiFeatureTypeTranslationsByIdGet
        //instance.apiFeatureTypeTranslationsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
