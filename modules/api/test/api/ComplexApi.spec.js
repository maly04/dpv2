/**
 * Direct Portal REST API
 * The Direct Portal REST API
 *
 * OpenAPI spec version: v1
 * Contact: info@direct-portal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DirectPortalRestApi);
  }
}(this, function(expect, DirectPortalRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DirectPortalRestApi.ComplexApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ComplexApi', function() {
    describe('apiComplexActivateByIdGet', function() {
      it('should call apiComplexActivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexActivateByIdGet
        //instance.apiComplexActivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexActiveGet', function() {
      it('should call apiComplexActiveGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexActiveGet
        //instance.apiComplexActiveGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexByIdGet', function() {
      it('should call apiComplexByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexByIdGet
        //instance.apiComplexByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexByNameByIdGet', function() {
      it('should call apiComplexByNameByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexByNameByIdGet
        //instance.apiComplexByNameByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexByNamePost', function() {
      it('should call apiComplexByNamePost successfully', function(done) {
        //uncomment below and update the code to test apiComplexByNamePost
        //instance.apiComplexByNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexContactAddressesByIdGet', function() {
      it('should call apiComplexContactAddressesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexContactAddressesByIdGet
        //instance.apiComplexContactAddressesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexContactAddressesByIdPost', function() {
      it('should call apiComplexContactAddressesByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiComplexContactAddressesByIdPost
        //instance.apiComplexContactAddressesByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexContactDetailsByIdGet', function() {
      it('should call apiComplexContactDetailsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexContactDetailsByIdGet
        //instance.apiComplexContactDetailsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexContactDetailsByIdPost', function() {
      it('should call apiComplexContactDetailsByIdPost successfully', function(done) {
        //uncomment below and update the code to test apiComplexContactDetailsByIdPost
        //instance.apiComplexContactDetailsByIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexDeactivateByIdGet', function() {
      it('should call apiComplexDeactivateByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexDeactivateByIdGet
        //instance.apiComplexDeactivateByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexGet', function() {
      it('should call apiComplexGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexGet
        //instance.apiComplexGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexNotesByIdGet', function() {
      it('should call apiComplexNotesByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexNotesByIdGet
        //instance.apiComplexNotesByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexPost', function() {
      it('should call apiComplexPost successfully', function(done) {
        //uncomment below and update the code to test apiComplexPost
        //instance.apiComplexPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexPut', function() {
      it('should call apiComplexPut successfully', function(done) {
        //uncomment below and update the code to test apiComplexPut
        //instance.apiComplexPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexRelationshipsByIdGet', function() {
      it('should call apiComplexRelationshipsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexRelationshipsByIdGet
        //instance.apiComplexRelationshipsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexSetAsDefaultByIdGet', function() {
      it('should call apiComplexSetAsDefaultByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexSetAsDefaultByIdGet
        //instance.apiComplexSetAsDefaultByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiComplexTranslationsByIdGet', function() {
      it('should call apiComplexTranslationsByIdGet successfully', function(done) {
        //uncomment below and update the code to test apiComplexTranslationsByIdGet
        //instance.apiComplexTranslationsByIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
