/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ApprovalApi");goog.require("API.Client.DPApproval");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");API.Client.ApprovalApi=function(n,t,i){this.basePath_=i.has("ApprovalApiBasePath")?i.get("ApprovalApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ApprovalApiDefaultHeaders")?i.get("ApprovalApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ApprovalApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ApprovalApi.prototype.apiApprovalActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Approval/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiApprovalActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Approval/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ApprovalApi.prototype.apiApprovalByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Approval/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiApprovalByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ApprovalApi.prototype.apiApprovalByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Approval/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiApprovalByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalByNamePost=function(n,t){var r=this.basePath_+"/api/Approval/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Approval/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiApprovalContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Approval/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiApprovalContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ApprovalApi.prototype.apiApprovalContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Approval/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiApprovalContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Approval/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiApprovalContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ApprovalApi.prototype.apiApprovalDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Approval/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiApprovalDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Approval",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ApprovalApi.prototype.apiApprovalNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Approval/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiApprovalNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalPost=function(n,t){var r=this.basePath_+"/api/Approval",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalPut=function(n,t){var r=this.basePath_+"/api/Approval",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Approval/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiApprovalRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Approval/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiApprovalSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ApprovalApi.prototype.apiApprovalTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Approval/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiApprovalTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.BuildingApi");goog.require("API.Client.DPBuilding");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");API.Client.BuildingApi=function(n,t,i){this.basePath_=i.has("BuildingApiBasePath")?i.get("BuildingApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("BuildingApiDefaultHeaders")?i.get("BuildingApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.BuildingApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.BuildingApi.prototype.apiBuildingActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Building/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Building/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.BuildingApi.prototype.apiBuildingByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Building/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiBuildingByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.BuildingApi.prototype.apiBuildingByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Building/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingByNamePost=function(n,t){var r=this.basePath_+"/api/Building/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Building/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Building/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiBuildingContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.BuildingApi.prototype.apiBuildingContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Building/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Building/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiBuildingContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.BuildingApi.prototype.apiBuildingDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Building/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Building",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.BuildingApi.prototype.apiBuildingNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Building/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingPost=function(n,t){var r=this.basePath_+"/api/Building",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingPut=function(n,t){var r=this.basePath_+"/api/Building",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Building/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Building/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingApi.prototype.apiBuildingTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Building/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.BuildingPhaseApi");goog.require("API.Client.DPBuildingPhase");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");API.Client.BuildingPhaseApi=function(n,t,i){this.basePath_=i.has("BuildingPhaseApiBasePath")?i.get("BuildingPhaseApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("BuildingPhaseApiDefaultHeaders")?i.get("BuildingPhaseApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.BuildingPhaseApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseActivateByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingPhase/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/BuildingPhase/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/BuildingPhase/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseByNameByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingPhase/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseByNamePost=function(n,t){var r=this.basePath_+"/api/BuildingPhase/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingPhase/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/BuildingPhase/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingPhase/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/BuildingPhase/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingPhase/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseGet=function(n,t,i,r,u){var o=this.basePath_+"/api/BuildingPhase",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseNotesByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingPhase/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhasePost=function(n,t){var r=this.basePath_+"/api/BuildingPhase",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhasePut=function(n,t){var r=this.basePath_+"/api/BuildingPhase",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingPhase/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingPhase/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingPhaseApi.prototype.apiBuildingPhaseTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingPhase/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingPhaseTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.BuildingStatusApi");goog.require("API.Client.DPBuildingStatus");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");API.Client.BuildingStatusApi=function(n,t,i){this.basePath_=i.has("BuildingStatusApiBasePath")?i.get("BuildingStatusApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("BuildingStatusApiDefaultHeaders")?i.get("BuildingStatusApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.BuildingStatusApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.BuildingStatusApi.prototype.apiBuildingStatusActivateByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatus/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/BuildingStatus/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/BuildingStatus/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusByNameByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatus/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusByNamePost=function(n,t){var r=this.basePath_+"/api/BuildingStatus/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatus/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/BuildingStatus/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatus/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/BuildingStatus/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatus/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusGet=function(n,t,i,r,u){var o=this.basePath_+"/api/BuildingStatus",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusNotesByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatus/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusPost=function(n,t){var r=this.basePath_+"/api/BuildingStatus",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusPut=function(n,t){var r=this.basePath_+"/api/BuildingStatus",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatus/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatus/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusApi.prototype.apiBuildingStatusTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatus/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.BuildingStatusTypeApi");goog.require("API.Client.DPBuildingStatusType");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");API.Client.BuildingStatusTypeApi=function(n,t,i){this.basePath_=i.has("BuildingStatusTypeApiBasePath")?i.get("BuildingStatusTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("BuildingStatusTypeApiDefaultHeaders")?i.get("BuildingStatusTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.BuildingStatusTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatusType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/BuildingStatusType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/BuildingStatusType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatusType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeByNamePost=function(n,t){var r=this.basePath_+"/api/BuildingStatusType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatusType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/BuildingStatusType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatusType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/BuildingStatusType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatusType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/BuildingStatusType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatusType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypePost=function(n,t){var r=this.basePath_+"/api/BuildingStatusType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypePut=function(n,t){var r=this.basePath_+"/api/BuildingStatusType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatusType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatusType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.BuildingStatusTypeApi.prototype.apiBuildingStatusTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/BuildingStatusType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiBuildingStatusTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ComplexApi");goog.require("API.Client.DPComplex");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");API.Client.ComplexApi=function(n,t,i){this.basePath_=i.has("ComplexApiBasePath")?i.get("ComplexApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ComplexApiDefaultHeaders")?i.get("ComplexApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ComplexApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ComplexApi.prototype.apiComplexActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Complex/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiComplexActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Complex/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ComplexApi.prototype.apiComplexByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Complex/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiComplexByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ComplexApi.prototype.apiComplexByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Complex/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiComplexByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexByNamePost=function(n,t){var r=this.basePath_+"/api/Complex/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Complex/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiComplexContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Complex/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiComplexContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ComplexApi.prototype.apiComplexContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Complex/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiComplexContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Complex/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiComplexContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ComplexApi.prototype.apiComplexDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Complex/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiComplexDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Complex",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ComplexApi.prototype.apiComplexNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Complex/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiComplexNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexPost=function(n,t){var r=this.basePath_+"/api/Complex",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexPut=function(n,t){var r=this.basePath_+"/api/Complex",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Complex/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiComplexRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Complex/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiComplexSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ComplexApi.prototype.apiComplexTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Complex/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiComplexTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ContactAddressApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");API.Client.ContactAddressApi=function(n,t,i){this.basePath_=i.has("ContactAddressApiBasePath")?i.get("ContactAddressApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ContactAddressApiDefaultHeaders")?i.get("ContactAddressApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ContactAddressApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ContactAddressApi.prototype.apiContactAddressActivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddress/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContactAddress/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContactAddressApi.prototype.apiContactAddressByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/ContactAddress/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ContactAddressApi.prototype.apiContactAddressByNameByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddress/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressByNamePost=function(n,t){var r=this.basePath_+"/api/ContactAddress/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddress/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContactAddress/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContactAddressApi.prototype.apiContactAddressContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddress/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContactAddress/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContactAddressApi.prototype.apiContactAddressDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddress/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContactAddress",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContactAddressApi.prototype.apiContactAddressNotesByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddress/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressPost=function(n,t){var r=this.basePath_+"/api/ContactAddress",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressPut=function(n,t){var r=this.basePath_+"/api/ContactAddress",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddress/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddress/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressApi.prototype.apiContactAddressTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddress/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ContactAddressTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactAddressType");goog.require("API.Client.DPContactDetail");API.Client.ContactAddressTypeApi=function(n,t,i){this.basePath_=i.has("ContactAddressTypeApiBasePath")?i.get("ContactAddressTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ContactAddressTypeApiDefaultHeaders")?i.get("ContactAddressTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ContactAddressTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddressType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContactAddressType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/ContactAddressType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddressType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeByNamePost=function(n,t){var r=this.basePath_+"/api/ContactAddressType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddressType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContactAddressType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddressType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContactAddressType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddressType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContactAddressType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddressType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypePost=function(n,t){var r=this.basePath_+"/api/ContactAddressType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypePut=function(n,t){var r=this.basePath_+"/api/ContactAddressType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddressType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddressType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactAddressTypeApi.prototype.apiContactAddressTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactAddressType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactAddressTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ContactDetailApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");API.Client.ContactDetailApi=function(n,t,i){this.basePath_=i.has("ContactDetailApiBasePath")?i.get("ContactDetailApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ContactDetailApiDefaultHeaders")?i.get("ContactDetailApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ContactDetailApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ContactDetailApi.prototype.apiContactDetailActivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetail/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContactDetail/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContactDetailApi.prototype.apiContactDetailByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/ContactDetail/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ContactDetailApi.prototype.apiContactDetailByNameByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetail/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailByNamePost=function(n,t){var r=this.basePath_+"/api/ContactDetail/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetail/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContactDetail/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContactDetailApi.prototype.apiContactDetailContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetail/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContactDetail/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContactDetailApi.prototype.apiContactDetailDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetail/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContactDetail",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContactDetailApi.prototype.apiContactDetailNotesByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetail/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailPost=function(n,t){var r=this.basePath_+"/api/ContactDetail",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailPut=function(n,t){var r=this.basePath_+"/api/ContactDetail",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetail/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetail/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailApi.prototype.apiContactDetailTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetail/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ContactDetailTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPContactDetailType");API.Client.ContactDetailTypeApi=function(n,t,i){this.basePath_=i.has("ContactDetailTypeApiBasePath")?i.get("ContactDetailTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ContactDetailTypeApiDefaultHeaders")?i.get("ContactDetailTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ContactDetailTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetailType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContactDetailType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/ContactDetailType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetailType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeByNamePost=function(n,t){var r=this.basePath_+"/api/ContactDetailType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetailType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContactDetailType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetailType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContactDetailType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetailType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContactDetailType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetailType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypePost=function(n,t){var r=this.basePath_+"/api/ContactDetailType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypePut=function(n,t){var r=this.basePath_+"/api/ContactDetailType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetailType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetailType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContactDetailTypeApi.prototype.apiContactDetailTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/ContactDetailType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContactDetailTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ContractApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPContract");API.Client.ContractApi=function(n,t,i){this.basePath_=i.has("ContractApiBasePath")?i.get("ContractApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ContractApiDefaultHeaders")?i.get("ContractApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ContractApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ContractApi.prototype.apiContractActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Contract/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Contract/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContractApi.prototype.apiContractByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Contract/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiContractByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ContractApi.prototype.apiContractByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Contract/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractByNamePost=function(n,t){var r=this.basePath_+"/api/Contract/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Contract/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Contract/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContractContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContractApi.prototype.apiContractContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Contract/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Contract/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContractContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContractApi.prototype.apiContractDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Contract/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Contract",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContractApi.prototype.apiContractNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Contract/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractPost=function(n,t){var r=this.basePath_+"/api/Contract",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractPut=function(n,t){var r=this.basePath_+"/api/Contract",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Contract/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Contract/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractApi.prototype.apiContractTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Contract/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ContractDetailApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPContractDetail");API.Client.ContractDetailApi=function(n,t,i){this.basePath_=i.has("ContractDetailApiBasePath")?i.get("ContractDetailApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ContractDetailApiDefaultHeaders")?i.get("ContractDetailApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ContractDetailApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ContractDetailApi.prototype.apiContractDetailActivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetail/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContractDetail/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContractDetailApi.prototype.apiContractDetailByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/ContractDetail/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ContractDetailApi.prototype.apiContractDetailByNameByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetail/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailByNamePost=function(n,t){var r=this.basePath_+"/api/ContractDetail/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetail/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContractDetail/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContractDetailApi.prototype.apiContractDetailContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetail/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContractDetail/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContractDetailApi.prototype.apiContractDetailDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetail/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContractDetail",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContractDetailApi.prototype.apiContractDetailNotesByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetail/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailPost=function(n,t){var r=this.basePath_+"/api/ContractDetail",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailPut=function(n,t){var r=this.basePath_+"/api/ContractDetail",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetail/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetail/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailApi.prototype.apiContractDetailTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetail/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ContractDetailTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPContractDetailType");API.Client.ContractDetailTypeApi=function(n,t,i){this.basePath_=i.has("ContractDetailTypeApiBasePath")?i.get("ContractDetailTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ContractDetailTypeApiDefaultHeaders")?i.get("ContractDetailTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ContractDetailTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetailType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContractDetailType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/ContractDetailType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetailType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeByNamePost=function(n,t){var r=this.basePath_+"/api/ContractDetailType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetailType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContractDetailType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetailType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/ContractDetailType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetailType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ContractDetailType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetailType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypePost=function(n,t){var r=this.basePath_+"/api/ContractDetailType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypePut=function(n,t){var r=this.basePath_+"/api/ContractDetailType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetailType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetailType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ContractDetailTypeApi.prototype.apiContractDetailTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/ContractDetailType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiContractDetailTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.CountryApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPCountry");API.Client.CountryApi=function(n,t,i){this.basePath_=i.has("CountryApiBasePath")?i.get("CountryApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("CountryApiDefaultHeaders")?i.get("CountryApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.CountryApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.CountryApi.prototype.apiCountryActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Country/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiCountryActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountryActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Country/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.CountryApi.prototype.apiCountryByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Country/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiCountryByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.CountryApi.prototype.apiCountryByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Country/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiCountryByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountryByNamePost=function(n,t){var r=this.basePath_+"/api/Country/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountryContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Country/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiCountryContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountryContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Country/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiCountryContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.CountryApi.prototype.apiCountryContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Country/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiCountryContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountryContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Country/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiCountryContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.CountryApi.prototype.apiCountryDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Country/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiCountryDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountryGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Country",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.CountryApi.prototype.apiCountryNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Country/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiCountryNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountryPost=function(n,t){var r=this.basePath_+"/api/Country",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountryPut=function(n,t){var r=this.basePath_+"/api/Country",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountryRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Country/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiCountryRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountrySetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Country/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiCountrySetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.CountryApi.prototype.apiCountryTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Country/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiCountryTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DeveloperApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPDeveloper");API.Client.DeveloperApi=function(n,t,i){this.basePath_=i.has("DeveloperApiBasePath")?i.get("DeveloperApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DeveloperApiDefaultHeaders")?i.get("DeveloperApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DeveloperApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DeveloperApi.prototype.apiDeveloperActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Developer/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Developer/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.DeveloperApi.prototype.apiDeveloperByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Developer/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.DeveloperApi.prototype.apiDeveloperByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Developer/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperByNamePost=function(n,t){var r=this.basePath_+"/api/Developer/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Developer/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Developer/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.DeveloperApi.prototype.apiDeveloperContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Developer/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Developer/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.DeveloperApi.prototype.apiDeveloperDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Developer/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Developer",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.DeveloperApi.prototype.apiDeveloperNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Developer/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperPost=function(n,t){var r=this.basePath_+"/api/Developer",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperPut=function(n,t){var r=this.basePath_+"/api/Developer",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Developer/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Developer/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DeveloperApi.prototype.apiDeveloperTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Developer/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDeveloperTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DocumentApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPDocument");API.Client.DocumentApi=function(n,t,i){this.basePath_=i.has("DocumentApiBasePath")?i.get("DocumentApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DocumentApiDefaultHeaders")?i.get("DocumentApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DocumentApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DocumentApi.prototype.apiDocumentActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Document/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Document/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.DocumentApi.prototype.apiDocumentByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Document/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiDocumentByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.DocumentApi.prototype.apiDocumentByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Document/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentByNamePost=function(n,t){var r=this.basePath_+"/api/Document/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Document/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Document/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiDocumentContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.DocumentApi.prototype.apiDocumentContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Document/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Document/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiDocumentContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.DocumentApi.prototype.apiDocumentDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Document/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Document",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.DocumentApi.prototype.apiDocumentNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Document/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentPost=function(n,t){var r=this.basePath_+"/api/Document",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentPut=function(n,t){var r=this.basePath_+"/api/Document",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Document/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Document/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentApi.prototype.apiDocumentTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Document/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DocumentTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPDocumentType");API.Client.DocumentTypeApi=function(n,t,i){this.basePath_=i.has("DocumentTypeApiBasePath")?i.get("DocumentTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DocumentTypeApiDefaultHeaders")?i.get("DocumentTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DocumentTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DocumentTypeApi.prototype.apiDocumentTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/DocumentType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/DocumentType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/DocumentType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/DocumentType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeByNamePost=function(n,t){var r=this.basePath_+"/api/DocumentType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/DocumentType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/DocumentType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/DocumentType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/DocumentType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/DocumentType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/DocumentType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/DocumentType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypePost=function(n,t){var r=this.basePath_+"/api/DocumentType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypePut=function(n,t){var r=this.basePath_+"/api/DocumentType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/DocumentType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/DocumentType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DocumentTypeApi.prototype.apiDocumentTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/DocumentType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiDocumentTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};goog.provide("API.Client.DPApproval");API.Client.DPApproval=function(){};API.Client.DPApproval.prototype.ID;API.Client.DPApproval.prototype.name;API.Client.DPApproval.prototype.description;API.Client.DPApproval.prototype.active;API.Client.DPApproval.prototype._default;API.Client.DPApproval.prototype.migrationID;API.Client.DPApproval.prototype.color;API.Client.DPApproval.prototype.subscriptionID;API.Client.DPApproval.prototype.subscription;goog.provide("API.Client.DPBuilding");API.Client.DPBuilding=function(){};API.Client.DPBuilding.prototype.complexId;API.Client.DPBuilding.prototype.complex;API.Client.DPBuilding.prototype.units;API.Client.DPBuilding.prototype.features;API.Client.DPBuilding.prototype.contractDetails;API.Client.DPBuilding.prototype.floors;API.Client.DPBuilding.prototype.constructionStartDate;API.Client.DPBuilding.prototype.constructionEndDate;API.Client.DPBuilding.prototype.tagline;API.Client.DPBuilding.prototype.kind;API.Client.DPBuilding.prototype.termsAndConditions;API.Client.DPBuilding.prototype.floorHeight;API.Client.DPBuilding.prototype.contactDetails;API.Client.DPBuilding.prototype.statusType;API.Client.DPBuilding.prototype.translations;API.Client.DPBuilding.prototype.relationships;API.Client.DPBuilding.prototype.longitude;API.Client.DPBuilding.prototype.latitude;API.Client.DPBuilding.prototype.shape;API.Client.DPBuilding.prototype.coordinates;API.Client.DPBuilding.prototype.shapeColor;API.Client.DPBuilding.prototype.ID;API.Client.DPBuilding.prototype.name;API.Client.DPBuilding.prototype.description;API.Client.DPBuilding.prototype.active;API.Client.DPBuilding.prototype._default;API.Client.DPBuilding.prototype.migrationID;API.Client.DPBuilding.prototype.color;API.Client.DPBuilding.prototype.subscriptionID;API.Client.DPBuilding.prototype.subscription;goog.provide("API.Client.DPBuildingPhase");API.Client.DPBuildingPhase=function(){};API.Client.DPBuildingPhase.prototype.ID;API.Client.DPBuildingPhase.prototype.name;API.Client.DPBuildingPhase.prototype.description;API.Client.DPBuildingPhase.prototype.active;API.Client.DPBuildingPhase.prototype._default;API.Client.DPBuildingPhase.prototype.migrationID;API.Client.DPBuildingPhase.prototype.color;API.Client.DPBuildingPhase.prototype.subscriptionID;API.Client.DPBuildingPhase.prototype.subscription;goog.provide("API.Client.DPBuildingStatus");API.Client.DPBuildingStatus=function(){};API.Client.DPBuildingStatus.prototype.ID;API.Client.DPBuildingStatus.prototype.name;API.Client.DPBuildingStatus.prototype.description;API.Client.DPBuildingStatus.prototype.active;API.Client.DPBuildingStatus.prototype._default;API.Client.DPBuildingStatus.prototype.migrationID;API.Client.DPBuildingStatus.prototype.color;API.Client.DPBuildingStatus.prototype.subscriptionID;API.Client.DPBuildingStatus.prototype.subscription;goog.provide("API.Client.DPBuildingStatusType");API.Client.DPBuildingStatusType=function(){};API.Client.DPBuildingStatusType.prototype.ID;API.Client.DPBuildingStatusType.prototype.name;API.Client.DPBuildingStatusType.prototype.description;API.Client.DPBuildingStatusType.prototype.active;API.Client.DPBuildingStatusType.prototype._default;API.Client.DPBuildingStatusType.prototype.migrationID;API.Client.DPBuildingStatusType.prototype.color;API.Client.DPBuildingStatusType.prototype.subscriptionID;API.Client.DPBuildingStatusType.prototype.subscription;goog.provide("API.Client.DPComplex");API.Client.DPComplex=function(){};API.Client.DPComplex.prototype.URL;API.Client.DPComplex.prototype.features;API.Client.DPComplex.prototype.buildings;API.Client.DPComplex.prototype.contractDetails;API.Client.DPComplex.prototype.relationships;API.Client.DPComplex.prototype.longitude;API.Client.DPComplex.prototype.latitude;API.Client.DPComplex.prototype.shape;API.Client.DPComplex.prototype.coordinates;API.Client.DPComplex.prototype.shapeColor;API.Client.DPComplex.prototype.ID;API.Client.DPComplex.prototype.name;API.Client.DPComplex.prototype.description;API.Client.DPComplex.prototype.active;API.Client.DPComplex.prototype._default;API.Client.DPComplex.prototype.migrationID;API.Client.DPComplex.prototype.color;API.Client.DPComplex.prototype.subscriptionID;API.Client.DPComplex.prototype.subscription;goog.provide("API.Client.DPContactAddress");API.Client.DPContactAddress=function(){};API.Client.DPContactAddress.prototype.address;API.Client.DPContactAddress.prototype.subDistrict;API.Client.DPContactAddress.prototype.district;API.Client.DPContactAddress.prototype.city;API.Client.DPContactAddress.prototype.state;API.Client.DPContactAddress.prototype.zIPCode;API.Client.DPContactAddress.prototype.countryId;API.Client.DPContactAddress.prototype.country;API.Client.DPContactAddress.prototype.typeId;API.Client.DPContactAddress.prototype.type;API.Client.DPContactAddress.prototype.translations;API.Client.DPContactAddress.prototype.longitude;API.Client.DPContactAddress.prototype.latitude;API.Client.DPContactAddress.prototype.shape;API.Client.DPContactAddress.prototype.coordinates;API.Client.DPContactAddress.prototype.shapeColor;API.Client.DPContactAddress.prototype.ID;API.Client.DPContactAddress.prototype.name;API.Client.DPContactAddress.prototype.description;API.Client.DPContactAddress.prototype.active;API.Client.DPContactAddress.prototype._default;API.Client.DPContactAddress.prototype.migrationID;API.Client.DPContactAddress.prototype.color;API.Client.DPContactAddress.prototype.subscriptionID;API.Client.DPContactAddress.prototype.subscription;goog.provide("API.Client.DPContactAddressType");API.Client.DPContactAddressType=function(){};API.Client.DPContactAddressType.prototype.ID;API.Client.DPContactAddressType.prototype.name;API.Client.DPContactAddressType.prototype.description;API.Client.DPContactAddressType.prototype.active;API.Client.DPContactAddressType.prototype._default;API.Client.DPContactAddressType.prototype.migrationID;API.Client.DPContactAddressType.prototype.color;API.Client.DPContactAddressType.prototype.subscriptionID;API.Client.DPContactAddressType.prototype.subscription;goog.provide("API.Client.DPContactDetail");API.Client.DPContactDetail=function(){};API.Client.DPContactDetail.prototype.value;API.Client.DPContactDetail.prototype.typeId;API.Client.DPContactDetail.prototype.type;API.Client.DPContactDetail.prototype.ID;API.Client.DPContactDetail.prototype.name;API.Client.DPContactDetail.prototype.description;API.Client.DPContactDetail.prototype.active;API.Client.DPContactDetail.prototype._default;API.Client.DPContactDetail.prototype.migrationID;API.Client.DPContactDetail.prototype.color;API.Client.DPContactDetail.prototype.subscriptionID;API.Client.DPContactDetail.prototype.subscription;goog.provide("API.Client.DPContactDetailType");API.Client.DPContactDetailType=function(){};API.Client.DPContactDetailType.prototype.ID;API.Client.DPContactDetailType.prototype.name;API.Client.DPContactDetailType.prototype.description;API.Client.DPContactDetailType.prototype.active;API.Client.DPContactDetailType.prototype._default;API.Client.DPContactDetailType.prototype.migrationID;API.Client.DPContactDetailType.prototype.color;API.Client.DPContactDetailType.prototype.subscriptionID;API.Client.DPContactDetailType.prototype.subscription;goog.provide("API.Client.DPContactsViewModel");API.Client.DPContactsViewModel=function(){};API.Client.DPContactsViewModel.prototype.contacts;goog.provide("API.Client.DPContactViewModel");API.Client.DPContactViewModel=function(){};API.Client.DPContactViewModel.prototype.emailAddress;API.Client.DPContactViewModel.prototype.telephoneNumber;API.Client.DPContactViewModel.prototype.ID;API.Client.DPContactViewModel.prototype.name;API.Client.DPContactViewModel.prototype.description;API.Client.DPContactViewModel.prototype.active;API.Client.DPContactViewModel.prototype._default;API.Client.DPContactViewModel.prototype.migrationID;API.Client.DPContactViewModel.prototype.color;API.Client.DPContactViewModel.prototype.subscriptionID;API.Client.DPContactViewModel.prototype.subscription;goog.provide("API.Client.DPContract");API.Client.DPContract=function(){};API.Client.DPContract.prototype.organizationIssuedToId;API.Client.DPContract.prototype.organizationIssuedTo;API.Client.DPContract.prototype.startDateTime;API.Client.DPContract.prototype.endDateTime;API.Client.DPContract.prototype.relationships;API.Client.DPContract.prototype.ID;API.Client.DPContract.prototype.name;API.Client.DPContract.prototype.description;API.Client.DPContract.prototype.active;API.Client.DPContract.prototype._default;API.Client.DPContract.prototype.migrationID;API.Client.DPContract.prototype.color;API.Client.DPContract.prototype.subscriptionID;API.Client.DPContract.prototype.subscription;goog.provide("API.Client.DPContractDetail");API.Client.DPContractDetail=function(){};API.Client.DPContractDetail.prototype.typeId;API.Client.DPContractDetail.prototype.type;API.Client.DPContractDetail.prototype.value;API.Client.DPContractDetail.prototype.translations;API.Client.DPContractDetail.prototype.ID;API.Client.DPContractDetail.prototype.name;API.Client.DPContractDetail.prototype.description;API.Client.DPContractDetail.prototype.active;API.Client.DPContractDetail.prototype._default;API.Client.DPContractDetail.prototype.migrationID;API.Client.DPContractDetail.prototype.color;API.Client.DPContractDetail.prototype.subscriptionID;API.Client.DPContractDetail.prototype.subscription;goog.provide("API.Client.DPContractDetailType");API.Client.DPContractDetailType=function(){};API.Client.DPContractDetailType.prototype.ID;API.Client.DPContractDetailType.prototype.name;API.Client.DPContractDetailType.prototype.description;API.Client.DPContractDetailType.prototype.active;API.Client.DPContractDetailType.prototype._default;API.Client.DPContractDetailType.prototype.migrationID;API.Client.DPContractDetailType.prototype.color;API.Client.DPContractDetailType.prototype.subscriptionID;API.Client.DPContractDetailType.prototype.subscription;goog.provide("API.Client.DPCountry");API.Client.DPCountry=function(){};API.Client.DPCountry.prototype.ID;API.Client.DPCountry.prototype.name;API.Client.DPCountry.prototype.description;API.Client.DPCountry.prototype.active;API.Client.DPCountry.prototype._default;API.Client.DPCountry.prototype.migrationID;API.Client.DPCountry.prototype.color;API.Client.DPCountry.prototype.subscriptionID;API.Client.DPCountry.prototype.subscription;goog.provide("API.Client.DPCreateUserViewModel");API.Client.DPCreateUserViewModel=function(){};API.Client.DPCreateUserViewModel.prototype.username;API.Client.DPCreateUserViewModel.prototype.password;goog.provide("API.Client.DPDeveloper");API.Client.DPDeveloper=function(){};API.Client.DPDeveloper.prototype.ID;API.Client.DPDeveloper.prototype.name;API.Client.DPDeveloper.prototype.description;API.Client.DPDeveloper.prototype.active;API.Client.DPDeveloper.prototype._default;API.Client.DPDeveloper.prototype.migrationID;API.Client.DPDeveloper.prototype.color;API.Client.DPDeveloper.prototype.subscriptionID;API.Client.DPDeveloper.prototype.subscription;goog.provide("API.Client.DPDocument");API.Client.DPDocument=function(){};API.Client.DPDocument.prototype.size;API.Client.DPDocument.prototype.fileExtension;API.Client.DPDocument.prototype.mimeType;API.Client.DPDocument.prototype.data;API.Client.DPDocument.prototype.content;API.Client.DPDocument.prototype.typeId;API.Client.DPDocument.prototype.type;API.Client.DPDocument.prototype.ID;API.Client.DPDocument.prototype.name;API.Client.DPDocument.prototype.description;API.Client.DPDocument.prototype.active;API.Client.DPDocument.prototype._default;API.Client.DPDocument.prototype.migrationID;API.Client.DPDocument.prototype.color;API.Client.DPDocument.prototype.subscriptionID;API.Client.DPDocument.prototype.subscription;
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DPDocumentsModuleServiceApi");API.Client.DPDocumentsModuleServiceApi=function(n,t,i){this.basePath_=i.has("DPDocumentsModuleServiceApiBasePath")?i.get("DPDocumentsModuleServiceApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DPDocumentsModuleServiceApiDefaultHeaders")?i.get("DPDocumentsModuleServiceApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DPDocumentsModuleServiceApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DPDocumentsModuleServiceApi.prototype.apiModulesDocumentsUploadPost=function(n,t){var u=this.basePath_+"/api/modules/documents/Upload",r={},f=angular.extend({},this.defaultHeaders_),i;return n!==undefined&&(r.files=n),i={method:"POST",url:u,json:!0,params:r,headers:f},t&&(i=angular.extend(i,t)),this.http_(i)};goog.provide("API.Client.DPDocumentType");API.Client.DPDocumentType=function(){};API.Client.DPDocumentType.prototype.ID;API.Client.DPDocumentType.prototype.name;API.Client.DPDocumentType.prototype.description;API.Client.DPDocumentType.prototype.active;API.Client.DPDocumentType.prototype._default;API.Client.DPDocumentType.prototype.migrationID;API.Client.DPDocumentType.prototype.color;API.Client.DPDocumentType.prototype.subscriptionID;API.Client.DPDocumentType.prototype.subscription;
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DPEmailServiceApi");API.Client.DPEmailServiceApi=function(n,t,i){this.basePath_=i.has("DPEmailServiceApiBasePath")?i.get("DPEmailServiceApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DPEmailServiceApiDefaultHeaders")?i.get("DPEmailServiceApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DPEmailServiceApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DPEmailServiceApi.prototype.apiEmailSendEmailPost=function(n,t,i,r,u,f,e,o,s){var l=this.basePath_+"/api/email/SendEmail",h={},a=angular.extend({},this.defaultHeaders_),c;return n!==undefined&&(h.FromName=n),t!==undefined&&(h.FromAddress=t),i!==undefined&&(h.ToName=i),r!==undefined&&(h.ToAddress=r),u!==undefined&&(h.Cc=u),f!==undefined&&(h.Subject=f),e!==undefined&&(h.IsHtml=e),o!==undefined&&(h.Body=o),c={method:"POST",url:l,json:!0,params:h,headers:a},s&&(c=angular.extend(c,s)),this.http_(c)};goog.provide("API.Client.DPEntityType");API.Client.DPEntityType=function(){};API.Client.DPEntityType.prototype.controller;API.Client.DPEntityType.prototype.typeName;API.Client.DPEntityType.prototype.ID;API.Client.DPEntityType.prototype.name;API.Client.DPEntityType.prototype.description;API.Client.DPEntityType.prototype.active;API.Client.DPEntityType.prototype._default;API.Client.DPEntityType.prototype.migrationID;API.Client.DPEntityType.prototype.color;API.Client.DPEntityType.prototype.subscriptionID;API.Client.DPEntityType.prototype.subscription;goog.provide("API.Client.DPFeature");API.Client.DPFeature=function(){};API.Client.DPFeature.prototype.typeId;API.Client.DPFeature.prototype.type;API.Client.DPFeature.prototype.value;API.Client.DPFeature.prototype.ID;API.Client.DPFeature.prototype.name;API.Client.DPFeature.prototype.description;API.Client.DPFeature.prototype.active;API.Client.DPFeature.prototype._default;API.Client.DPFeature.prototype.migrationID;API.Client.DPFeature.prototype.color;API.Client.DPFeature.prototype.subscriptionID;API.Client.DPFeature.prototype.subscription;goog.provide("API.Client.DPFeatureType");API.Client.DPFeatureType=function(){};API.Client.DPFeatureType.prototype.ID;API.Client.DPFeatureType.prototype.name;API.Client.DPFeatureType.prototype.description;API.Client.DPFeatureType.prototype.active;API.Client.DPFeatureType.prototype._default;API.Client.DPFeatureType.prototype.migrationID;API.Client.DPFeatureType.prototype.color;API.Client.DPFeatureType.prototype.subscriptionID;API.Client.DPFeatureType.prototype.subscription;goog.provide("API.Client.DPLanguage");API.Client.DPLanguage=function(){};API.Client.DPLanguage.prototype.code;API.Client.DPLanguage.prototype.ID;API.Client.DPLanguage.prototype.name;API.Client.DPLanguage.prototype.description;API.Client.DPLanguage.prototype.active;API.Client.DPLanguage.prototype._default;API.Client.DPLanguage.prototype.migrationID;API.Client.DPLanguage.prototype.color;API.Client.DPLanguage.prototype.subscriptionID;API.Client.DPLanguage.prototype.subscription;
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DPMatrixModuleServiceApi");API.Client.DPMatrixModuleServiceApi=function(n,t,i){this.basePath_=i.has("DPMatrixModuleServiceApiBasePath")?i.get("DPMatrixModuleServiceApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DPMatrixModuleServiceApiDefaultHeaders")?i.get("DPMatrixModuleServiceApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DPMatrixModuleServiceApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DPMatrixModuleServiceApi.prototype.apiModulesMatrixGetBuildingMatrixByBuildingIdGet=function(n,t){var r=this.basePath_+"/api/modules/matrix/GetBuildingMatrix/{buildingId}".replace("{buildingId}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter buildingId when calling apiModulesMatrixGetBuildingMatrixByBuildingIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DPMatrixModuleServiceApi.prototype.apiModulesMatrixGetUnitMatrixByBuildingIdByUnitIdGet=function(n,t,i){var u=this.basePath_+"/api/modules/matrix/GetUnitMatrix/{buildingId}/{unitId}".replace("{buildingId}",String(n)).replace("{unitId}",String(t)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter buildingId when calling apiModulesMatrixGetUnitMatrixByBuildingIdByUnitIdGet");if(!t)throw new Error("Missing required parameter unitId when calling apiModulesMatrixGetUnitMatrixByBuildingIdByUnitIdGet");return r={method:"GET",url:u,json:!0,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DPMetadataServiceApi");API.Client.DPMetadataServiceApi=function(n,t,i){this.basePath_=i.has("DPMetadataServiceApiBasePath")?i.get("DPMetadataServiceApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DPMetadataServiceApiDefaultHeaders")?i.get("DPMetadataServiceApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DPMetadataServiceApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DPMetadataServiceApi.prototype.apiMetadataByIdGet=function(n,t,i){var f=this.basePath_+"/api/metadata/{id}".replace("{id}",String(n)),u={},e=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiMetadataByIdGet");return t!==undefined&&(u.fields=t),r={method:"GET",url:f,json:!0,params:u,headers:e},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.DPMetadataServiceApi.prototype.apiMetadataGet=function(n){var i=this.basePath_+"/api/metadata",r=angular.extend({},this.defaultHeaders_),t={method:"GET",url:i,json:!0,params:{},headers:r};return n&&(t=angular.extend(t,n)),this.http_(t)};API.Client.DPMetadataServiceApi.prototype.apiMetadataTranslationsGet=function(n,t){var u=this.basePath_+"/api/metadata/Translations",r={},f=angular.extend({},this.defaultHeaders_),i;return n!==undefined&&(r.culture=n),i={method:"GET",url:u,json:!0,params:r,headers:f},t&&(i=angular.extend(i,t)),this.http_(i)};goog.provide("API.Client.DPNationality");API.Client.DPNationality=function(){};API.Client.DPNationality.prototype.translations;API.Client.DPNationality.prototype.ID;API.Client.DPNationality.prototype.name;API.Client.DPNationality.prototype.description;API.Client.DPNationality.prototype.active;API.Client.DPNationality.prototype._default;API.Client.DPNationality.prototype.migrationID;API.Client.DPNationality.prototype.color;API.Client.DPNationality.prototype.subscriptionID;API.Client.DPNationality.prototype.subscription;goog.provide("API.Client.DPNote");API.Client.DPNote=function(){};API.Client.DPNote.prototype.relationships;API.Client.DPNote.prototype.text;API.Client.DPNote.prototype.ID;API.Client.DPNote.prototype.name;API.Client.DPNote.prototype.description;API.Client.DPNote.prototype.active;API.Client.DPNote.prototype._default;API.Client.DPNote.prototype.migrationID;API.Client.DPNote.prototype.color;API.Client.DPNote.prototype.subscriptionID;API.Client.DPNote.prototype.subscription;goog.provide("API.Client.DPNotification");API.Client.DPNotification=function(){};API.Client.DPNotification.prototype.ID;API.Client.DPNotification.prototype.name;API.Client.DPNotification.prototype.description;API.Client.DPNotification.prototype.active;API.Client.DPNotification.prototype._default;API.Client.DPNotification.prototype.migrationID;API.Client.DPNotification.prototype.color;API.Client.DPNotification.prototype.subscriptionID;API.Client.DPNotification.prototype.subscription;goog.provide("API.Client.DPOrganizationUnit");API.Client.DPOrganizationUnit=function(){};API.Client.DPOrganizationUnit.prototype.typeId;API.Client.DPOrganizationUnit.prototype.type;API.Client.DPOrganizationUnit.prototype.organizationUnits;API.Client.DPOrganizationUnit.prototype.contactAddresses;API.Client.DPOrganizationUnit.prototype.contactDetails;API.Client.DPOrganizationUnit.prototype.taxIdentification;API.Client.DPOrganizationUnit.prototype.statusId;API.Client.DPOrganizationUnit.prototype.status;API.Client.DPOrganizationUnit.prototype.translations;API.Client.DPOrganizationUnit.prototype.relationships;API.Client.DPOrganizationUnit.prototype.notes;API.Client.DPOrganizationUnit.prototype.ID;API.Client.DPOrganizationUnit.prototype.name;API.Client.DPOrganizationUnit.prototype.description;API.Client.DPOrganizationUnit.prototype.active;API.Client.DPOrganizationUnit.prototype._default;API.Client.DPOrganizationUnit.prototype.migrationID;API.Client.DPOrganizationUnit.prototype.color;API.Client.DPOrganizationUnit.prototype.subscriptionID;API.Client.DPOrganizationUnit.prototype.subscription;goog.provide("API.Client.DPOrganizationUnitStatus");API.Client.DPOrganizationUnitStatus=function(){};API.Client.DPOrganizationUnitStatus.prototype.ID;API.Client.DPOrganizationUnitStatus.prototype.name;API.Client.DPOrganizationUnitStatus.prototype.description;API.Client.DPOrganizationUnitStatus.prototype.active;API.Client.DPOrganizationUnitStatus.prototype._default;API.Client.DPOrganizationUnitStatus.prototype.migrationID;API.Client.DPOrganizationUnitStatus.prototype.color;API.Client.DPOrganizationUnitStatus.prototype.subscriptionID;API.Client.DPOrganizationUnitStatus.prototype.subscription;goog.provide("API.Client.DPOrganizationUnitType");API.Client.DPOrganizationUnitType=function(){};API.Client.DPOrganizationUnitType.prototype.ID;API.Client.DPOrganizationUnitType.prototype.name;API.Client.DPOrganizationUnitType.prototype.description;API.Client.DPOrganizationUnitType.prototype.active;API.Client.DPOrganizationUnitType.prototype._default;API.Client.DPOrganizationUnitType.prototype.migrationID;API.Client.DPOrganizationUnitType.prototype.color;API.Client.DPOrganizationUnitType.prototype.subscriptionID;API.Client.DPOrganizationUnitType.prototype.subscription;goog.provide("API.Client.DPOwnershipType");API.Client.DPOwnershipType=function(){};API.Client.DPOwnershipType.prototype.ID;API.Client.DPOwnershipType.prototype.name;API.Client.DPOwnershipType.prototype.description;API.Client.DPOwnershipType.prototype.active;API.Client.DPOwnershipType.prototype._default;API.Client.DPOwnershipType.prototype.migrationID;API.Client.DPOwnershipType.prototype.color;API.Client.DPOwnershipType.prototype.subscriptionID;API.Client.DPOwnershipType.prototype.subscription;goog.provide("API.Client.DPPayment");API.Client.DPPayment=function(){};API.Client.DPPayment.prototype.sequence;API.Client.DPPayment.prototype.saleId;API.Client.DPPayment.prototype.sale;API.Client.DPPayment.prototype.dueDate;API.Client.DPPayment.prototype.paidDate;API.Client.DPPayment.prototype.expectedAmount;API.Client.DPPayment.prototype.actualAmount;API.Client.DPPayment.prototype.percent;API.Client.DPPayment.prototype.flag;API.Client.DPPayment.prototype.receiptID;API.Client.DPPayment.prototype.isSpecial;API.Client.DPPayment.prototype.method;API.Client.DPPayment.prototype.typeId;API.Client.DPPayment.prototype.type;API.Client.DPPayment.prototype.notes;API.Client.DPPayment.prototype.ID;API.Client.DPPayment.prototype.name;API.Client.DPPayment.prototype.description;API.Client.DPPayment.prototype.active;API.Client.DPPayment.prototype._default;API.Client.DPPayment.prototype.migrationID;API.Client.DPPayment.prototype.color;API.Client.DPPayment.prototype.subscriptionID;API.Client.DPPayment.prototype.subscription;goog.provide("API.Client.DPPaymentMethod");API.Client.DPPaymentMethod=function(){};API.Client.DPPaymentMethod.prototype.ID;API.Client.DPPaymentMethod.prototype.name;API.Client.DPPaymentMethod.prototype.description;API.Client.DPPaymentMethod.prototype.active;API.Client.DPPaymentMethod.prototype._default;API.Client.DPPaymentMethod.prototype.migrationID;API.Client.DPPaymentMethod.prototype.color;API.Client.DPPaymentMethod.prototype.subscriptionID;API.Client.DPPaymentMethod.prototype.subscription;goog.provide("API.Client.DPPaymentPart");API.Client.DPPaymentPart=function(){};API.Client.DPPaymentPart.prototype.sequence;API.Client.DPPaymentPart.prototype.paymentId;API.Client.DPPaymentPart.prototype.payment;API.Client.DPPaymentPart.prototype.dueDate;API.Client.DPPaymentPart.prototype.paidDate;API.Client.DPPaymentPart.prototype.expectedAmount;API.Client.DPPaymentPart.prototype.actualAmount;API.Client.DPPaymentPart.prototype.receipt;API.Client.DPPaymentPart.prototype.method;API.Client.DPPaymentPart.prototype.ID;API.Client.DPPaymentPart.prototype.name;API.Client.DPPaymentPart.prototype.description;API.Client.DPPaymentPart.prototype.active;API.Client.DPPaymentPart.prototype._default;API.Client.DPPaymentPart.prototype.migrationID;API.Client.DPPaymentPart.prototype.color;API.Client.DPPaymentPart.prototype.subscriptionID;API.Client.DPPaymentPart.prototype.subscription;goog.provide("API.Client.DPPaymentType");API.Client.DPPaymentType=function(){};API.Client.DPPaymentType.prototype.ID;API.Client.DPPaymentType.prototype.name;API.Client.DPPaymentType.prototype.description;API.Client.DPPaymentType.prototype.active;API.Client.DPPaymentType.prototype._default;API.Client.DPPaymentType.prototype.migrationID;API.Client.DPPaymentType.prototype.color;API.Client.DPPaymentType.prototype.subscriptionID;API.Client.DPPaymentType.prototype.subscription;goog.provide("API.Client.DPPermission");API.Client.DPPermission=function(){};API.Client.DPPermission.prototype.ID;API.Client.DPPermission.prototype.name;API.Client.DPPermission.prototype.description;API.Client.DPPermission.prototype.active;API.Client.DPPermission.prototype._default;API.Client.DPPermission.prototype.migrationID;API.Client.DPPermission.prototype.color;API.Client.DPPermission.prototype.subscriptionID;API.Client.DPPermission.prototype.subscription;goog.provide("API.Client.DPPerson");API.Client.DPPerson=function(){};API.Client.DPPerson.prototype.prefixId;API.Client.DPPerson.prototype.prefix;API.Client.DPPerson.prototype.firstName;API.Client.DPPerson.prototype.lastName;API.Client.DPPerson.prototype.occupation;API.Client.DPPerson.prototype.passportNumber;API.Client.DPPerson.prototype.passportIssuedFrom;API.Client.DPPerson.prototype.passportExpiryDate;API.Client.DPPerson.prototype.passportIssueDate;API.Client.DPPerson.prototype.dateOfBirth;API.Client.DPPerson.prototype.organizationUnits;API.Client.DPPerson.prototype.contactAddresses;API.Client.DPPerson.prototype.contactDetails;API.Client.DPPerson.prototype.nationalityId;API.Client.DPPerson.prototype.nationality;API.Client.DPPerson.prototype.type;API.Client.DPPerson.prototype.typeId;API.Client.DPPerson.prototype.relationships;API.Client.DPPerson.prototype.translations;API.Client.DPPerson.prototype.ID;API.Client.DPPerson.prototype.name;API.Client.DPPerson.prototype.description;API.Client.DPPerson.prototype.active;API.Client.DPPerson.prototype._default;API.Client.DPPerson.prototype.migrationID;API.Client.DPPerson.prototype.color;API.Client.DPPerson.prototype.subscriptionID;API.Client.DPPerson.prototype.subscription;goog.provide("API.Client.DPPersonPrefix");API.Client.DPPersonPrefix=function(){};API.Client.DPPersonPrefix.prototype.translations;API.Client.DPPersonPrefix.prototype.ID;API.Client.DPPersonPrefix.prototype.name;API.Client.DPPersonPrefix.prototype.description;API.Client.DPPersonPrefix.prototype.active;API.Client.DPPersonPrefix.prototype._default;API.Client.DPPersonPrefix.prototype.migrationID;API.Client.DPPersonPrefix.prototype.color;API.Client.DPPersonPrefix.prototype.subscriptionID;API.Client.DPPersonPrefix.prototype.subscription;goog.provide("API.Client.DPPersonType");API.Client.DPPersonType=function(){};API.Client.DPPersonType.prototype.ID;API.Client.DPPersonType.prototype.name;API.Client.DPPersonType.prototype.description;API.Client.DPPersonType.prototype.active;API.Client.DPPersonType.prototype._default;API.Client.DPPersonType.prototype.migrationID;API.Client.DPPersonType.prototype.color;API.Client.DPPersonType.prototype.subscriptionID;API.Client.DPPersonType.prototype.subscription;
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DPPhoneBookModuleServiceApi");goog.require("API.Client.DPContactsViewModel");API.Client.DPPhoneBookModuleServiceApi=function(n,t,i){this.basePath_=i.has("DPPhoneBookModuleServiceApiBasePath")?i.get("DPPhoneBookModuleServiceApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DPPhoneBookModuleServiceApiDefaultHeaders")?i.get("DPPhoneBookModuleServiceApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DPPhoneBookModuleServiceApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DPPhoneBookModuleServiceApi.prototype.apiModulesPhonebookContactsGet=function(n){var i=this.basePath_+"/api/modules/phonebook/Contacts",r=angular.extend({},this.defaultHeaders_),t={method:"GET",url:i,json:!0,params:{},headers:r};return n&&(t=angular.extend(t,n)),this.http_(t)};goog.provide("API.Client.DPPost");API.Client.DPPost=function(){};API.Client.DPPost.prototype.imageID;API.Client.DPPost.prototype.image;API.Client.DPPost.prototype.expires;API.Client.DPPost.prototype.typeId;API.Client.DPPost.prototype.type;API.Client.DPPost.prototype.created;API.Client.DPPost.prototype.modified;API.Client.DPPost.prototype.createdById;API.Client.DPPost.prototype.createdBy;API.Client.DPPost.prototype.modifiedById;API.Client.DPPost.prototype.modifiedBy;API.Client.DPPost.prototype.ID;API.Client.DPPost.prototype.name;API.Client.DPPost.prototype.description;API.Client.DPPost.prototype.active;API.Client.DPPost.prototype._default;API.Client.DPPost.prototype.migrationID;API.Client.DPPost.prototype.color;API.Client.DPPost.prototype.subscriptionID;API.Client.DPPost.prototype.subscription;goog.provide("API.Client.DPPostType");API.Client.DPPostType=function(){};API.Client.DPPostType.prototype.ID;API.Client.DPPostType.prototype.name;API.Client.DPPostType.prototype.description;API.Client.DPPostType.prototype.active;API.Client.DPPostType.prototype._default;API.Client.DPPostType.prototype.migrationID;API.Client.DPPostType.prototype.color;API.Client.DPPostType.prototype.subscriptionID;API.Client.DPPostType.prototype.subscription;goog.provide("API.Client.DPPrice");API.Client.DPPrice=function(){};API.Client.DPPrice.prototype.typeId;API.Client.DPPrice.prototype.type;API.Client.DPPrice.prototype.value;API.Client.DPPrice.prototype.ID;API.Client.DPPrice.prototype.name;API.Client.DPPrice.prototype.description;API.Client.DPPrice.prototype.active;API.Client.DPPrice.prototype._default;API.Client.DPPrice.prototype.migrationID;API.Client.DPPrice.prototype.color;API.Client.DPPrice.prototype.subscriptionID;API.Client.DPPrice.prototype.subscription;goog.provide("API.Client.DPPriceListItemViewModel");API.Client.DPPriceListItemViewModel=function(){};API.Client.DPPriceListItemViewModel.prototype.building;API.Client.DPPriceListItemViewModel.prototype.buildingId;API.Client.DPPriceListItemViewModel.prototype.type;API.Client.DPPriceListItemViewModel.prototype.typeId;API.Client.DPPriceListItemViewModel.prototype.status;API.Client.DPPriceListItemViewModel.prototype.statusId;API.Client.DPPriceListItemViewModel.prototype.unitNumber;API.Client.DPPriceListItemViewModel.prototype.floor;API.Client.DPPriceListItemViewModel.prototype.size;API.Client.DPPriceListItemViewModel.prototype.prices;API.Client.DPPriceListItemViewModel.prototype.ID;API.Client.DPPriceListItemViewModel.prototype.name;API.Client.DPPriceListItemViewModel.prototype.description;API.Client.DPPriceListItemViewModel.prototype.active;API.Client.DPPriceListItemViewModel.prototype._default;API.Client.DPPriceListItemViewModel.prototype.migrationID;API.Client.DPPriceListItemViewModel.prototype.color;API.Client.DPPriceListItemViewModel.prototype.subscriptionID;API.Client.DPPriceListItemViewModel.prototype.subscription;
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DPPriceListModuleServiceApi");goog.require("API.Client.DPPriceListItemViewModel");API.Client.DPPriceListModuleServiceApi=function(n,t,i){this.basePath_=i.has("DPPriceListModuleServiceApiBasePath")?i.get("DPPriceListModuleServiceApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DPPriceListModuleServiceApiDefaultHeaders")?i.get("DPPriceListModuleServiceApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DPPriceListModuleServiceApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DPPriceListModuleServiceApi.prototype.apiPricelistGetPriceListForUnitGet=function(n,t){var u=this.basePath_+"/api/pricelist/GetPriceListForUnit",r={},f=angular.extend({},this.defaultHeaders_),i;return n!==undefined&&(r.id=n),i={method:"GET",url:u,json:!0,params:r,headers:f},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DPPriceListModuleServiceApi.prototype.apiPricelistGetPriceListGet=function(n,t,i,r){var e=this.basePath_+"/api/pricelist/GetPriceList",u={},o=angular.extend({},this.defaultHeaders_),f;return n!==undefined&&(u.selectedBuildings=n),t!==undefined&&(u.selectedTypes=t),i!==undefined&&(u.selectedStatuses=i),f={method:"GET",url:e,json:!0,params:u,headers:o},r&&(f=angular.extend(f,r)),this.http_(f)};goog.provide("API.Client.DPPriceType");API.Client.DPPriceType=function(){};API.Client.DPPriceType.prototype.ID;API.Client.DPPriceType.prototype.name;API.Client.DPPriceType.prototype.description;API.Client.DPPriceType.prototype.active;API.Client.DPPriceType.prototype._default;API.Client.DPPriceType.prototype.migrationID;API.Client.DPPriceType.prototype.color;API.Client.DPPriceType.prototype.subscriptionID;API.Client.DPPriceType.prototype.subscription;goog.provide("API.Client.DPQuota");API.Client.DPQuota=function(){};API.Client.DPQuota.prototype.unitQuotas;API.Client.DPQuota.prototype.ID;API.Client.DPQuota.prototype.name;API.Client.DPQuota.prototype.description;API.Client.DPQuota.prototype.active;API.Client.DPQuota.prototype._default;API.Client.DPQuota.prototype.migrationID;API.Client.DPQuota.prototype.color;API.Client.DPQuota.prototype.subscriptionID;API.Client.DPQuota.prototype.subscription;goog.provide("API.Client.DPRelationship");API.Client.DPRelationship=function(){};API.Client.DPRelationship.prototype.typeId;API.Client.DPRelationship.prototype.type;API.Client.DPRelationship.prototype.targetId;API.Client.DPRelationship.prototype.targetType;API.Client.DPRelationship.prototype.ID;API.Client.DPRelationship.prototype.name;API.Client.DPRelationship.prototype.description;API.Client.DPRelationship.prototype.active;API.Client.DPRelationship.prototype._default;API.Client.DPRelationship.prototype.migrationID;API.Client.DPRelationship.prototype.color;API.Client.DPRelationship.prototype.subscriptionID;API.Client.DPRelationship.prototype.subscription;goog.provide("API.Client.DPRelationshipType");API.Client.DPRelationshipType=function(){};API.Client.DPRelationshipType.prototype.typeId;API.Client.DPRelationshipType.prototype.type;API.Client.DPRelationshipType.prototype.ID;API.Client.DPRelationshipType.prototype.name;API.Client.DPRelationshipType.prototype.description;API.Client.DPRelationshipType.prototype.active;API.Client.DPRelationshipType.prototype._default;API.Client.DPRelationshipType.prototype.migrationID;API.Client.DPRelationshipType.prototype.color;API.Client.DPRelationshipType.prototype.subscriptionID;API.Client.DPRelationshipType.prototype.subscription;goog.provide("API.Client.DPReservation");API.Client.DPReservation=function(){};API.Client.DPReservation.prototype.saleID;API.Client.DPReservation.prototype.sale;API.Client.DPReservation.prototype.ownershipType;API.Client.DPReservation.prototype.ownershipTypeID;API.Client.DPReservation.prototype.salesPersonID;API.Client.DPReservation.prototype.salesPerson;API.Client.DPReservation.prototype.salesPersonCommission;API.Client.DPReservation.prototype.salesPersonCommissionComment;API.Client.DPReservation.prototype.generalRemark;API.Client.DPReservation.prototype.type;API.Client.DPReservation.prototype.typeID;API.Client.DPReservation.prototype.agency;API.Client.DPReservation.prototype.agencyID;API.Client.DPReservation.prototype.agencyCommission;API.Client.DPReservation.prototype.agencyCommissionComment;API.Client.DPReservation.prototype.at;API.Client.DPReservation.prototype.dateOfReservation;API.Client.DPReservation.prototype.dateOfContract;API.Client.DPReservation.prototype.unitID;API.Client.DPReservation.prototype.unit;API.Client.DPReservation.prototype.contractDetails;API.Client.DPReservation.prototype.relationships;API.Client.DPReservation.prototype.salesRequests;API.Client.DPReservation.prototype.deposit;API.Client.DPReservation.prototype.onContract;API.Client.DPReservation.prototype.installments;API.Client.DPReservation.prototype.onKey;API.Client.DPReservation.prototype.transferPercentage;API.Client.DPReservation.prototype.paymentMethod;API.Client.DPReservation.prototype.paymentMethodID;API.Client.DPReservation.prototype.statusType;API.Client.DPReservation.prototype.created;API.Client.DPReservation.prototype.modified;API.Client.DPReservation.prototype.createdById;API.Client.DPReservation.prototype.createdBy;API.Client.DPReservation.prototype.modifiedById;API.Client.DPReservation.prototype.modifiedBy;API.Client.DPReservation.prototype.ID;API.Client.DPReservation.prototype.name;API.Client.DPReservation.prototype.description;API.Client.DPReservation.prototype.active;API.Client.DPReservation.prototype._default;API.Client.DPReservation.prototype.migrationID;API.Client.DPReservation.prototype.color;API.Client.DPReservation.prototype.subscriptionID;API.Client.DPReservation.prototype.subscription;goog.provide("API.Client.DPReservationType");API.Client.DPReservationType=function(){};API.Client.DPReservationType.prototype.ID;API.Client.DPReservationType.prototype.name;API.Client.DPReservationType.prototype.description;API.Client.DPReservationType.prototype.active;API.Client.DPReservationType.prototype._default;API.Client.DPReservationType.prototype.migrationID;API.Client.DPReservationType.prototype.color;API.Client.DPReservationType.prototype.subscriptionID;API.Client.DPReservationType.prototype.subscription;goog.provide("API.Client.DPRule");API.Client.DPRule=function(){};API.Client.DPRule.prototype.ID;API.Client.DPRule.prototype.name;API.Client.DPRule.prototype.description;API.Client.DPRule.prototype.active;API.Client.DPRule.prototype._default;API.Client.DPRule.prototype.migrationID;API.Client.DPRule.prototype.color;API.Client.DPRule.prototype.subscriptionID;API.Client.DPRule.prototype.subscription;goog.provide("API.Client.DPSale");API.Client.DPSale=function(){};API.Client.DPSale.prototype.customerId;API.Client.DPSale.prototype.complexId;API.Client.DPSale.prototype.buildingId;API.Client.DPSale.prototype.unitId;API.Client.DPSale.prototype.customer;API.Client.DPSale.prototype.complex;API.Client.DPSale.prototype.building;API.Client.DPSale.prototype.unit;API.Client.DPSale.prototype.cancelled;API.Client.DPSale.prototype.statusId;API.Client.DPSale.prototype.status;API.Client.DPSale.prototype.statusTypes;API.Client.DPSale.prototype.ID;API.Client.DPSale.prototype.name;API.Client.DPSale.prototype.description;API.Client.DPSale.prototype.active;API.Client.DPSale.prototype._default;API.Client.DPSale.prototype.migrationID;API.Client.DPSale.prototype.color;API.Client.DPSale.prototype.subscriptionID;API.Client.DPSale.prototype.subscription;goog.provide("API.Client.DPSalesRequest");API.Client.DPSalesRequest=function(){};API.Client.DPSalesRequest.prototype.typeID;API.Client.DPSalesRequest.prototype.type;API.Client.DPSalesRequest.prototype.ID;API.Client.DPSalesRequest.prototype.name;API.Client.DPSalesRequest.prototype.description;API.Client.DPSalesRequest.prototype.active;API.Client.DPSalesRequest.prototype._default;API.Client.DPSalesRequest.prototype.migrationID;API.Client.DPSalesRequest.prototype.color;API.Client.DPSalesRequest.prototype.subscriptionID;API.Client.DPSalesRequest.prototype.subscription;goog.provide("API.Client.DPSalesRequestType");API.Client.DPSalesRequestType=function(){};API.Client.DPSalesRequestType.prototype.ID;API.Client.DPSalesRequestType.prototype.name;API.Client.DPSalesRequestType.prototype.description;API.Client.DPSalesRequestType.prototype.active;API.Client.DPSalesRequestType.prototype._default;API.Client.DPSalesRequestType.prototype.migrationID;API.Client.DPSalesRequestType.prototype.color;API.Client.DPSalesRequestType.prototype.subscriptionID;API.Client.DPSalesRequestType.prototype.subscription;goog.provide("API.Client.DPSaleStatus");API.Client.DPSaleStatus=function(){};API.Client.DPSaleStatus.prototype.ID;API.Client.DPSaleStatus.prototype.name;API.Client.DPSaleStatus.prototype.description;API.Client.DPSaleStatus.prototype.active;API.Client.DPSaleStatus.prototype._default;API.Client.DPSaleStatus.prototype.migrationID;API.Client.DPSaleStatus.prototype.color;API.Client.DPSaleStatus.prototype.subscriptionID;API.Client.DPSaleStatus.prototype.subscription;goog.provide("API.Client.DPSaleStatusType");API.Client.DPSaleStatusType=function(){};API.Client.DPSaleStatusType.prototype.unitStatusId;API.Client.DPSaleStatusType.prototype.unitStatus;API.Client.DPSaleStatusType.prototype.ID;API.Client.DPSaleStatusType.prototype.name;API.Client.DPSaleStatusType.prototype.description;API.Client.DPSaleStatusType.prototype.active;API.Client.DPSaleStatusType.prototype._default;API.Client.DPSaleStatusType.prototype.migrationID;API.Client.DPSaleStatusType.prototype.color;API.Client.DPSaleStatusType.prototype.subscriptionID;API.Client.DPSaleStatusType.prototype.subscription;
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DPSearchModuleServiceApi");API.Client.DPSearchModuleServiceApi=function(n,t,i){this.basePath_=i.has("DPSearchModuleServiceApiBasePath")?i.get("DPSearchModuleServiceApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DPSearchModuleServiceApiDefaultHeaders")?i.get("DPSearchModuleServiceApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DPSearchModuleServiceApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DPSearchModuleServiceApi.prototype.apiModulesSearchSearchGet=function(n,t){var u=this.basePath_+"/api/modules/search/Search",r={},f=angular.extend({},this.defaultHeaders_),i;return n!==undefined&&(r.id=n),i={method:"GET",url:u,json:!0,params:r,headers:f},t&&(i=angular.extend(i,t)),this.http_(i)};goog.provide("API.Client.DPSubscription");API.Client.DPSubscription=function(){};API.Client.DPSubscription.prototype.expiryDate;API.Client.DPSubscription.prototype.aPIKey;API.Client.DPSubscription.prototype.ID;API.Client.DPSubscription.prototype.name;API.Client.DPSubscription.prototype.description;API.Client.DPSubscription.prototype.active;API.Client.DPSubscription.prototype._default;API.Client.DPSubscription.prototype.migrationID;API.Client.DPSubscription.prototype.color;API.Client.DPSubscription.prototype.subscriptionID;API.Client.DPSubscription.prototype.subscription;goog.provide("API.Client.DPTranslation");API.Client.DPTranslation=function(){};API.Client.DPTranslation.prototype.languageId;API.Client.DPTranslation.prototype.language;API.Client.DPTranslation.prototype.ID;API.Client.DPTranslation.prototype.name;API.Client.DPTranslation.prototype.description;API.Client.DPTranslation.prototype.active;API.Client.DPTranslation.prototype._default;API.Client.DPTranslation.prototype.migrationID;API.Client.DPTranslation.prototype.color;API.Client.DPTranslation.prototype.subscriptionID;API.Client.DPTranslation.prototype.subscription;
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DPTranslationsServiceApi");API.Client.DPTranslationsServiceApi=function(n,t,i){this.basePath_=i.has("DPTranslationsServiceApiBasePath")?i.get("DPTranslationsServiceApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DPTranslationsServiceApiDefaultHeaders")?i.get("DPTranslationsServiceApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DPTranslationsServiceApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DPTranslationsServiceApi.prototype.apiSystemtranslationsGet=function(n){var i=this.basePath_+"/api/systemtranslations",r=angular.extend({},this.defaultHeaders_),t={method:"GET",url:i,json:!0,params:{},headers:r};return n&&(t=angular.extend(t,n)),this.http_(t)};goog.provide("API.Client.DPUnit");API.Client.DPUnit=function(){};API.Client.DPUnit.prototype.buildingId;API.Client.DPUnit.prototype.building;API.Client.DPUnit.prototype.floor;API.Client.DPUnit.prototype.unitNumber;API.Client.DPUnit.prototype.features;API.Client.DPUnit.prototype.contractDetails;API.Client.DPUnit.prototype.quotas;API.Client.DPUnit.prototype.typeId;API.Client.DPUnit.prototype.type;API.Client.DPUnit.prototype.statusId;API.Client.DPUnit.prototype.status;API.Client.DPUnit.prototype.subTypeId;API.Client.DPUnit.prototype.subType;API.Client.DPUnit.prototype.size;API.Client.DPUnit.prototype.sizeRounded;API.Client.DPUnit.prototype.sizeLandOffice;API.Client.DPUnit.prototype.prices;API.Client.DPUnit.prototype.notes;API.Client.DPUnit.prototype.reservationId;API.Client.DPUnit.prototype.reservation;API.Client.DPUnit.prototype.ID;API.Client.DPUnit.prototype.name;API.Client.DPUnit.prototype.description;API.Client.DPUnit.prototype.active;API.Client.DPUnit.prototype._default;API.Client.DPUnit.prototype.migrationID;API.Client.DPUnit.prototype.color;API.Client.DPUnit.prototype.subscriptionID;API.Client.DPUnit.prototype.subscription;goog.provide("API.Client.DPUnitQuota");API.Client.DPUnitQuota=function(){};API.Client.DPUnitQuota.prototype.quotaId;API.Client.DPUnitQuota.prototype.quota;API.Client.DPUnitQuota.prototype.unitId;API.Client.DPUnitQuota.prototype.unit;API.Client.DPUnitQuota.prototype.ID;API.Client.DPUnitQuota.prototype.name;API.Client.DPUnitQuota.prototype.description;API.Client.DPUnitQuota.prototype.active;API.Client.DPUnitQuota.prototype._default;API.Client.DPUnitQuota.prototype.migrationID;API.Client.DPUnitQuota.prototype.color;API.Client.DPUnitQuota.prototype.subscriptionID;API.Client.DPUnitQuota.prototype.subscription;goog.provide("API.Client.DPUnitStatus");API.Client.DPUnitStatus=function(){};API.Client.DPUnitStatus.prototype.shortcode;API.Client.DPUnitStatus.prototype.ID;API.Client.DPUnitStatus.prototype.name;API.Client.DPUnitStatus.prototype.description;API.Client.DPUnitStatus.prototype.active;API.Client.DPUnitStatus.prototype._default;API.Client.DPUnitStatus.prototype.migrationID;API.Client.DPUnitStatus.prototype.color;API.Client.DPUnitStatus.prototype.subscriptionID;API.Client.DPUnitStatus.prototype.subscription;goog.provide("API.Client.DPUnitSubType");API.Client.DPUnitSubType=function(){};API.Client.DPUnitSubType.prototype.ID;API.Client.DPUnitSubType.prototype.name;API.Client.DPUnitSubType.prototype.description;API.Client.DPUnitSubType.prototype.active;API.Client.DPUnitSubType.prototype._default;API.Client.DPUnitSubType.prototype.migrationID;API.Client.DPUnitSubType.prototype.color;API.Client.DPUnitSubType.prototype.subscriptionID;API.Client.DPUnitSubType.prototype.subscription;goog.provide("API.Client.DPUnitType");API.Client.DPUnitType=function(){};API.Client.DPUnitType.prototype.shortcode;API.Client.DPUnitType.prototype.ID;API.Client.DPUnitType.prototype.name;API.Client.DPUnitType.prototype.description;API.Client.DPUnitType.prototype.active;API.Client.DPUnitType.prototype._default;API.Client.DPUnitType.prototype.migrationID;API.Client.DPUnitType.prototype.color;API.Client.DPUnitType.prototype.subscriptionID;API.Client.DPUnitType.prototype.subscription;
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.DPUsersServiceApi");goog.require("API.Client.DPCreateUserViewModel");API.Client.DPUsersServiceApi=function(n,t,i){this.basePath_=i.has("DPUsersServiceApiBasePath")?i.get("DPUsersServiceApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("DPUsersServiceApiDefaultHeaders")?i.get("DPUsersServiceApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.DPUsersServiceApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.DPUsersServiceApi.prototype.apiUsersGetByIdGet=function(n,t){var r=this.basePath_+"/api/users/Get/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUsersGetByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.DPUsersServiceApi.prototype.apiUsersGetGet=function(n){var i=this.basePath_+"/api/users/Get",r=angular.extend({},this.defaultHeaders_),t={method:"GET",url:i,json:!0,params:{},headers:r};return n&&(t=angular.extend(t,n)),this.http_(t)};API.Client.DPUsersServiceApi.prototype.apiUsersPost=function(n,t){var r=this.basePath_+"/api/users",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.EntityTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPEntityType");API.Client.EntityTypeApi=function(n,t,i){this.basePath_=i.has("EntityTypeApiBasePath")?i.get("EntityTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("EntityTypeApiDefaultHeaders")?i.get("EntityTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.EntityTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.EntityTypeApi.prototype.apiEntityTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/EntityType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/EntityType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.EntityTypeApi.prototype.apiEntityTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/EntityType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.EntityTypeApi.prototype.apiEntityTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/EntityType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypeByNamePost=function(n,t){var r=this.basePath_+"/api/EntityType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/EntityType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/EntityType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.EntityTypeApi.prototype.apiEntityTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/EntityType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/EntityType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.EntityTypeApi.prototype.apiEntityTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/EntityType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/EntityType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.EntityTypeApi.prototype.apiEntityTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/EntityType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypePost=function(n,t){var r=this.basePath_+"/api/EntityType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypePut=function(n,t){var r=this.basePath_+"/api/EntityType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/EntityType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/EntityType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.EntityTypeApi.prototype.apiEntityTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/EntityType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiEntityTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.FeatureApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPFeature");API.Client.FeatureApi=function(n,t,i){this.basePath_=i.has("FeatureApiBasePath")?i.get("FeatureApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("FeatureApiDefaultHeaders")?i.get("FeatureApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.FeatureApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.FeatureApi.prototype.apiFeatureActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Feature/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeatureActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Feature/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.FeatureApi.prototype.apiFeatureByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Feature/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiFeatureByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.FeatureApi.prototype.apiFeatureByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Feature/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeatureByNamePost=function(n,t){var r=this.basePath_+"/api/Feature/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeatureContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Feature/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeatureContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Feature/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiFeatureContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.FeatureApi.prototype.apiFeatureContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Feature/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeatureContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Feature/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiFeatureContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.FeatureApi.prototype.apiFeatureDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Feature/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeatureGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Feature",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.FeatureApi.prototype.apiFeatureNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Feature/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeaturePost=function(n,t){var r=this.basePath_+"/api/Feature",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeaturePut=function(n,t){var r=this.basePath_+"/api/Feature",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeatureRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Feature/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeatureSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Feature/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureApi.prototype.apiFeatureTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Feature/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.FeatureTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPFeatureType");API.Client.FeatureTypeApi=function(n,t,i){this.basePath_=i.has("FeatureTypeApiBasePath")?i.get("FeatureTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("FeatureTypeApiDefaultHeaders")?i.get("FeatureTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.FeatureTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.FeatureTypeApi.prototype.apiFeatureTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/FeatureType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/FeatureType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/FeatureType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/FeatureType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeByNamePost=function(n,t){var r=this.basePath_+"/api/FeatureType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/FeatureType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/FeatureType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/FeatureType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/FeatureType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/FeatureType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/FeatureType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/FeatureType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypePost=function(n,t){var r=this.basePath_+"/api/FeatureType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypePut=function(n,t){var r=this.basePath_+"/api/FeatureType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/FeatureType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/FeatureType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.FeatureTypeApi.prototype.apiFeatureTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/FeatureType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiFeatureTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};goog.provide("API.Client.IFormFile");API.Client.IFormFile=function(){};API.Client.IFormFile.prototype.contentType;API.Client.IFormFile.prototype.contentDisposition;API.Client.IFormFile.prototype.headers;API.Client.IFormFile.prototype.length;API.Client.IFormFile.prototype.name;API.Client.IFormFile.prototype.fileName;
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.LanguageApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPLanguage");API.Client.LanguageApi=function(n,t,i){this.basePath_=i.has("LanguageApiBasePath")?i.get("LanguageApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("LanguageApiDefaultHeaders")?i.get("LanguageApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.LanguageApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.LanguageApi.prototype.apiLanguageActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Language/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiLanguageActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguageActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Language/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.LanguageApi.prototype.apiLanguageByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Language/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiLanguageByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.LanguageApi.prototype.apiLanguageByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Language/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiLanguageByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguageByNamePost=function(n,t){var r=this.basePath_+"/api/Language/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguageContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Language/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiLanguageContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguageContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Language/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiLanguageContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.LanguageApi.prototype.apiLanguageContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Language/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiLanguageContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguageContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Language/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiLanguageContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.LanguageApi.prototype.apiLanguageDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Language/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiLanguageDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguageGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Language",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.LanguageApi.prototype.apiLanguageNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Language/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiLanguageNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguagePost=function(n,t){var r=this.basePath_+"/api/Language",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguagePut=function(n,t){var r=this.basePath_+"/api/Language",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguageRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Language/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiLanguageRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguageSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Language/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiLanguageSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.LanguageApi.prototype.apiLanguageTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Language/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiLanguageTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.NationalityApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPNationality");API.Client.NationalityApi=function(n,t,i){this.basePath_=i.has("NationalityApiBasePath")?i.get("NationalityApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("NationalityApiDefaultHeaders")?i.get("NationalityApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.NationalityApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.NationalityApi.prototype.apiNationalityActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Nationality/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNationalityActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalityActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Nationality/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.NationalityApi.prototype.apiNationalityByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Nationality/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiNationalityByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.NationalityApi.prototype.apiNationalityByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Nationality/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNationalityByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalityByNamePost=function(n,t){var r=this.basePath_+"/api/Nationality/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalityContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Nationality/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNationalityContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalityContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Nationality/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiNationalityContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.NationalityApi.prototype.apiNationalityContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Nationality/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNationalityContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalityContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Nationality/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiNationalityContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.NationalityApi.prototype.apiNationalityDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Nationality/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNationalityDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalityGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Nationality",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.NationalityApi.prototype.apiNationalityNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Nationality/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNationalityNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalityPost=function(n,t){var r=this.basePath_+"/api/Nationality",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalityPut=function(n,t){var r=this.basePath_+"/api/Nationality",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalityRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Nationality/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNationalityRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalitySetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Nationality/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNationalitySetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NationalityApi.prototype.apiNationalityTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Nationality/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNationalityTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.NoteApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPNote");API.Client.NoteApi=function(n,t,i){this.basePath_=i.has("NoteApiBasePath")?i.get("NoteApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("NoteApiDefaultHeaders")?i.get("NoteApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.NoteApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.NoteApi.prototype.apiNoteActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Note/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNoteActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNoteActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Note/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.NoteApi.prototype.apiNoteByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Note/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiNoteByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.NoteApi.prototype.apiNoteByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Note/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNoteByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNoteByNamePost=function(n,t){var r=this.basePath_+"/api/Note/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNoteContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Note/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNoteContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNoteContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Note/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiNoteContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.NoteApi.prototype.apiNoteContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Note/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNoteContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNoteContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Note/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiNoteContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.NoteApi.prototype.apiNoteDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Note/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNoteDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNoteGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Note",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.NoteApi.prototype.apiNoteNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Note/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNoteNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNotePost=function(n,t){var r=this.basePath_+"/api/Note",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNotePut=function(n,t){var r=this.basePath_+"/api/Note",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNoteRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Note/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNoteRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNoteSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Note/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNoteSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NoteApi.prototype.apiNoteTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Note/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNoteTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.NotificationApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPNotification");API.Client.NotificationApi=function(n,t,i){this.basePath_=i.has("NotificationApiBasePath")?i.get("NotificationApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("NotificationApiDefaultHeaders")?i.get("NotificationApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.NotificationApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.NotificationApi.prototype.apiNotificationActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Notification/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNotificationActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Notification/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.NotificationApi.prototype.apiNotificationByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Notification/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiNotificationByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.NotificationApi.prototype.apiNotificationByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Notification/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNotificationByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationByNamePost=function(n,t){var r=this.basePath_+"/api/Notification/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Notification/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNotificationContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Notification/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiNotificationContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.NotificationApi.prototype.apiNotificationContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Notification/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNotificationContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Notification/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiNotificationContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.NotificationApi.prototype.apiNotificationDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Notification/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNotificationDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Notification",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.NotificationApi.prototype.apiNotificationNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Notification/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNotificationNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationPost=function(n,t){var r=this.basePath_+"/api/Notification",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationPut=function(n,t){var r=this.basePath_+"/api/Notification",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Notification/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNotificationRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Notification/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNotificationSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.NotificationApi.prototype.apiNotificationTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Notification/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiNotificationTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.OrganizationUnitApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPOrganizationUnit");API.Client.OrganizationUnitApi=function(n,t,i){this.basePath_=i.has("OrganizationUnitApiBasePath")?i.get("OrganizationUnitApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("OrganizationUnitApiDefaultHeaders")?i.get("OrganizationUnitApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.OrganizationUnitApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitActivateByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnit/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/OrganizationUnit/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/OrganizationUnit/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitByNameByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnit/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitByNamePost=function(n,t){var r=this.basePath_+"/api/OrganizationUnit/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnit/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/OrganizationUnit/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnit/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/OrganizationUnit/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnit/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitGet=function(n,t,i,r,u){var o=this.basePath_+"/api/OrganizationUnit",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitNotesByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnit/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitPost=function(n,t){var r=this.basePath_+"/api/OrganizationUnit",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitPut=function(n,t){var r=this.basePath_+"/api/OrganizationUnit",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnit/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnit/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitApi.prototype.apiOrganizationUnitTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnit/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.OrganizationUnitStatusApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPOrganizationUnitStatus");API.Client.OrganizationUnitStatusApi=function(n,t,i){this.basePath_=i.has("OrganizationUnitStatusApiBasePath")?i.get("OrganizationUnitStatusApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("OrganizationUnitStatusApiDefaultHeaders")?i.get("OrganizationUnitStatusApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.OrganizationUnitStatusApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusActivateByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/OrganizationUnitStatus/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/OrganizationUnitStatus/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusByNameByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusByNamePost=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/OrganizationUnitStatus/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/OrganizationUnitStatus/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusGet=function(n,t,i,r,u){var o=this.basePath_+"/api/OrganizationUnitStatus",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusNotesByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusPost=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusPut=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OrganizationUnitStatusApi.prototype.apiOrganizationUnitStatusTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/OrganizationUnitStatus/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOrganizationUnitStatusTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.OwnershipTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPOwnershipType");API.Client.OwnershipTypeApi=function(n,t,i){this.basePath_=i.has("OwnershipTypeApiBasePath")?i.get("OwnershipTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("OwnershipTypeApiDefaultHeaders")?i.get("OwnershipTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.OwnershipTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/OwnershipType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/OwnershipType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/OwnershipType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/OwnershipType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeByNamePost=function(n,t){var r=this.basePath_+"/api/OwnershipType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/OwnershipType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/OwnershipType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/OwnershipType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/OwnershipType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/OwnershipType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/OwnershipType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/OwnershipType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypePost=function(n,t){var r=this.basePath_+"/api/OwnershipType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypePut=function(n,t){var r=this.basePath_+"/api/OwnershipType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/OwnershipType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/OwnershipType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.OwnershipTypeApi.prototype.apiOwnershipTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/OwnershipType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiOwnershipTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PaymentApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPayment");API.Client.PaymentApi=function(n,t,i){this.basePath_=i.has("PaymentApiBasePath")?i.get("PaymentApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PaymentApiDefaultHeaders")?i.get("PaymentApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PaymentApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PaymentApi.prototype.apiPaymentActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Payment/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Payment/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PaymentApi.prototype.apiPaymentByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Payment/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPaymentByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PaymentApi.prototype.apiPaymentByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Payment/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentByNamePost=function(n,t){var r=this.basePath_+"/api/Payment/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Payment/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Payment/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPaymentContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PaymentApi.prototype.apiPaymentContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Payment/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Payment/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPaymentContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PaymentApi.prototype.apiPaymentDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Payment/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Payment",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PaymentApi.prototype.apiPaymentNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Payment/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentPost=function(n,t){var r=this.basePath_+"/api/Payment",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentPut=function(n,t){var r=this.basePath_+"/api/Payment",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Payment/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Payment/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentApi.prototype.apiPaymentTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Payment/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PaymentMethodApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPaymentMethod");API.Client.PaymentMethodApi=function(n,t,i){this.basePath_=i.has("PaymentMethodApiBasePath")?i.get("PaymentMethodApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PaymentMethodApiDefaultHeaders")?i.get("PaymentMethodApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PaymentMethodApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PaymentMethodApi.prototype.apiPaymentMethodActivateByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentMethod/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PaymentMethod/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/PaymentMethod/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodByNameByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentMethod/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodByNamePost=function(n,t){var r=this.basePath_+"/api/PaymentMethod/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentMethod/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/PaymentMethod/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentMethod/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/PaymentMethod/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentMethod/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PaymentMethod",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodNotesByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentMethod/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodPost=function(n,t){var r=this.basePath_+"/api/PaymentMethod",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodPut=function(n,t){var r=this.basePath_+"/api/PaymentMethod",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentMethod/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentMethod/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentMethodApi.prototype.apiPaymentMethodTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentMethod/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentMethodTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PaymentPartApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPaymentPart");API.Client.PaymentPartApi=function(n,t,i){this.basePath_=i.has("PaymentPartApiBasePath")?i.get("PaymentPartApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PaymentPartApiDefaultHeaders")?i.get("PaymentPartApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PaymentPartApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PaymentPartApi.prototype.apiPaymentPartActivateByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentPart/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PaymentPart/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PaymentPartApi.prototype.apiPaymentPartByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/PaymentPart/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PaymentPartApi.prototype.apiPaymentPartByNameByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentPart/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartByNamePost=function(n,t){var r=this.basePath_+"/api/PaymentPart/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentPart/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/PaymentPart/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PaymentPartApi.prototype.apiPaymentPartContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentPart/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/PaymentPart/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PaymentPartApi.prototype.apiPaymentPartDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentPart/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PaymentPart",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PaymentPartApi.prototype.apiPaymentPartNotesByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentPart/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartPost=function(n,t){var r=this.basePath_+"/api/PaymentPart",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartPut=function(n,t){var r=this.basePath_+"/api/PaymentPart",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentPart/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentPart/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentPartApi.prototype.apiPaymentPartTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentPart/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentPartTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PaymentTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPaymentType");API.Client.PaymentTypeApi=function(n,t,i){this.basePath_=i.has("PaymentTypeApiBasePath")?i.get("PaymentTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PaymentTypeApiDefaultHeaders")?i.get("PaymentTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PaymentTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PaymentTypeApi.prototype.apiPaymentTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PaymentType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/PaymentType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeByNamePost=function(n,t){var r=this.basePath_+"/api/PaymentType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/PaymentType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/PaymentType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PaymentType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypePost=function(n,t){var r=this.basePath_+"/api/PaymentType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypePut=function(n,t){var r=this.basePath_+"/api/PaymentType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PaymentTypeApi.prototype.apiPaymentTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/PaymentType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPaymentTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PermissionApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPermission");API.Client.PermissionApi=function(n,t,i){this.basePath_=i.has("PermissionApiBasePath")?i.get("PermissionApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PermissionApiDefaultHeaders")?i.get("PermissionApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PermissionApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PermissionApi.prototype.apiPermissionActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Permission/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPermissionActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Permission/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PermissionApi.prototype.apiPermissionByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Permission/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPermissionByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PermissionApi.prototype.apiPermissionByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Permission/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPermissionByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionByNamePost=function(n,t){var r=this.basePath_+"/api/Permission/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Permission/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPermissionContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Permission/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPermissionContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PermissionApi.prototype.apiPermissionContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Permission/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPermissionContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Permission/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPermissionContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PermissionApi.prototype.apiPermissionDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Permission/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPermissionDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Permission",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PermissionApi.prototype.apiPermissionNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Permission/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPermissionNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionPost=function(n,t){var r=this.basePath_+"/api/Permission",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionPut=function(n,t){var r=this.basePath_+"/api/Permission",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Permission/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPermissionRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Permission/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPermissionSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PermissionApi.prototype.apiPermissionTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Permission/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPermissionTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PersonApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPerson");API.Client.PersonApi=function(n,t,i){this.basePath_=i.has("PersonApiBasePath")?i.get("PersonApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PersonApiDefaultHeaders")?i.get("PersonApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PersonApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PersonApi.prototype.apiPersonActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Person/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Person/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PersonApi.prototype.apiPersonByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Person/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPersonByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PersonApi.prototype.apiPersonByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Person/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonByNamePost=function(n,t){var r=this.basePath_+"/api/Person/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Person/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Person/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPersonContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PersonApi.prototype.apiPersonContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Person/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Person/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPersonContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PersonApi.prototype.apiPersonDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Person/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Person",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PersonApi.prototype.apiPersonNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Person/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonPost=function(n,t){var r=this.basePath_+"/api/Person",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonPut=function(n,t){var r=this.basePath_+"/api/Person",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Person/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Person/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonApi.prototype.apiPersonTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Person/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PersonPrefixApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPersonPrefix");API.Client.PersonPrefixApi=function(n,t,i){this.basePath_=i.has("PersonPrefixApiBasePath")?i.get("PersonPrefixApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PersonPrefixApiDefaultHeaders")?i.get("PersonPrefixApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PersonPrefixApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PersonPrefixApi.prototype.apiPersonPrefixActivateByIdGet=function(n,t){var r=this.basePath_+"/api/PersonPrefix/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PersonPrefix/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/PersonPrefix/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixByNameByIdGet=function(n,t){var r=this.basePath_+"/api/PersonPrefix/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixByNamePost=function(n,t){var r=this.basePath_+"/api/PersonPrefix/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/PersonPrefix/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/PersonPrefix/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/PersonPrefix/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/PersonPrefix/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/PersonPrefix/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PersonPrefix",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixNotesByIdGet=function(n,t){var r=this.basePath_+"/api/PersonPrefix/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixPost=function(n,t){var r=this.basePath_+"/api/PersonPrefix",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixPut=function(n,t){var r=this.basePath_+"/api/PersonPrefix",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/PersonPrefix/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/PersonPrefix/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PersonPrefixApi.prototype.apiPersonPrefixTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/PersonPrefix/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPersonPrefixTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PostApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPost");API.Client.PostApi=function(n,t,i){this.basePath_=i.has("PostApiBasePath")?i.get("PostApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PostApiDefaultHeaders")?i.get("PostApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PostApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PostApi.prototype.apiPostActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Post/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Post/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PostApi.prototype.apiPostByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Post/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPostByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PostApi.prototype.apiPostByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Post/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostByNamePost=function(n,t){var r=this.basePath_+"/api/Post/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Post/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Post/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPostContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PostApi.prototype.apiPostContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Post/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Post/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPostContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PostApi.prototype.apiPostDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Post/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Post",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PostApi.prototype.apiPostNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Post/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostPost=function(n,t){var r=this.basePath_+"/api/Post",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostPut=function(n,t){var r=this.basePath_+"/api/Post",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Post/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Post/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostApi.prototype.apiPostTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Post/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PostTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPostType");API.Client.PostTypeApi=function(n,t,i){this.basePath_=i.has("PostTypeApiBasePath")?i.get("PostTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PostTypeApiDefaultHeaders")?i.get("PostTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PostTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PostTypeApi.prototype.apiPostTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/PostType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PostType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PostTypeApi.prototype.apiPostTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/PostType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PostTypeApi.prototype.apiPostTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/PostType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypeByNamePost=function(n,t){var r=this.basePath_+"/api/PostType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/PostType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/PostType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PostTypeApi.prototype.apiPostTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/PostType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/PostType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PostTypeApi.prototype.apiPostTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/PostType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PostType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PostTypeApi.prototype.apiPostTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/PostType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypePost=function(n,t){var r=this.basePath_+"/api/PostType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypePut=function(n,t){var r=this.basePath_+"/api/PostType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/PostType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/PostType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PostTypeApi.prototype.apiPostTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/PostType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPostTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PriceApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPrice");API.Client.PriceApi=function(n,t,i){this.basePath_=i.has("PriceApiBasePath")?i.get("PriceApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PriceApiDefaultHeaders")?i.get("PriceApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PriceApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PriceApi.prototype.apiPriceActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Price/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPriceActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Price/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PriceApi.prototype.apiPriceByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Price/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPriceByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PriceApi.prototype.apiPriceByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Price/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPriceByNamePost=function(n,t){var r=this.basePath_+"/api/Price/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPriceContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Price/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPriceContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Price/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPriceContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PriceApi.prototype.apiPriceContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Price/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPriceContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Price/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPriceContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PriceApi.prototype.apiPriceDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Price/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPriceGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Price",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PriceApi.prototype.apiPriceNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Price/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPricePost=function(n,t){var r=this.basePath_+"/api/Price",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPricePut=function(n,t){var r=this.basePath_+"/api/Price",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPriceRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Price/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPriceSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Price/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceApi.prototype.apiPriceTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Price/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.PriceTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPPriceType");API.Client.PriceTypeApi=function(n,t,i){this.basePath_=i.has("PriceTypeApiBasePath")?i.get("PriceTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("PriceTypeApiDefaultHeaders")?i.get("PriceTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.PriceTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.PriceTypeApi.prototype.apiPriceTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/PriceType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PriceType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PriceTypeApi.prototype.apiPriceTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/PriceType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.PriceTypeApi.prototype.apiPriceTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/PriceType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypeByNamePost=function(n,t){var r=this.basePath_+"/api/PriceType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/PriceType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/PriceType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PriceTypeApi.prototype.apiPriceTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/PriceType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/PriceType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.PriceTypeApi.prototype.apiPriceTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/PriceType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/PriceType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.PriceTypeApi.prototype.apiPriceTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/PriceType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypePost=function(n,t){var r=this.basePath_+"/api/PriceType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypePut=function(n,t){var r=this.basePath_+"/api/PriceType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/PriceType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/PriceType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.PriceTypeApi.prototype.apiPriceTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/PriceType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiPriceTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.QuotaApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPQuota");API.Client.QuotaApi=function(n,t,i){this.basePath_=i.has("QuotaApiBasePath")?i.get("QuotaApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("QuotaApiDefaultHeaders")?i.get("QuotaApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.QuotaApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.QuotaApi.prototype.apiQuotaActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Quota/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiQuotaActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Quota/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.QuotaApi.prototype.apiQuotaByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Quota/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiQuotaByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.QuotaApi.prototype.apiQuotaByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Quota/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiQuotaByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaByNamePost=function(n,t){var r=this.basePath_+"/api/Quota/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Quota/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiQuotaContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Quota/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiQuotaContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.QuotaApi.prototype.apiQuotaContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Quota/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiQuotaContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Quota/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiQuotaContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.QuotaApi.prototype.apiQuotaDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Quota/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiQuotaDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Quota",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.QuotaApi.prototype.apiQuotaNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Quota/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiQuotaNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaPost=function(n,t){var r=this.basePath_+"/api/Quota",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaPut=function(n,t){var r=this.basePath_+"/api/Quota",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Quota/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiQuotaRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Quota/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiQuotaSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.QuotaApi.prototype.apiQuotaTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Quota/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiQuotaTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.RelationshipApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPRelationship");API.Client.RelationshipApi=function(n,t,i){this.basePath_=i.has("RelationshipApiBasePath")?i.get("RelationshipApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("RelationshipApiDefaultHeaders")?i.get("RelationshipApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.RelationshipApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.RelationshipApi.prototype.apiRelationshipActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Relationship/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Relationship/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.RelationshipApi.prototype.apiRelationshipByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Relationship/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.RelationshipApi.prototype.apiRelationshipByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Relationship/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipByNamePost=function(n,t){var r=this.basePath_+"/api/Relationship/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Relationship/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Relationship/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.RelationshipApi.prototype.apiRelationshipContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Relationship/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Relationship/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.RelationshipApi.prototype.apiRelationshipDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Relationship/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Relationship",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.RelationshipApi.prototype.apiRelationshipNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Relationship/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipPost=function(n,t){var r=this.basePath_+"/api/Relationship",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipPut=function(n,t){var r=this.basePath_+"/api/Relationship",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Relationship/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Relationship/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipApi.prototype.apiRelationshipTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Relationship/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.RelationshipTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPRelationshipType");API.Client.RelationshipTypeApi=function(n,t,i){this.basePath_=i.has("RelationshipTypeApiBasePath")?i.get("RelationshipTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("RelationshipTypeApiDefaultHeaders")?i.get("RelationshipTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.RelationshipTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/RelationshipType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/RelationshipType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/RelationshipType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/RelationshipType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeByNamePost=function(n,t){var r=this.basePath_+"/api/RelationshipType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/RelationshipType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/RelationshipType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/RelationshipType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/RelationshipType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/RelationshipType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/RelationshipType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/RelationshipType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypePost=function(n,t){var r=this.basePath_+"/api/RelationshipType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypePut=function(n,t){var r=this.basePath_+"/api/RelationshipType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/RelationshipType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/RelationshipType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RelationshipTypeApi.prototype.apiRelationshipTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/RelationshipType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRelationshipTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ReservationApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPReservation");API.Client.ReservationApi=function(n,t,i){this.basePath_=i.has("ReservationApiBasePath")?i.get("ReservationApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ReservationApiDefaultHeaders")?i.get("ReservationApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ReservationApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ReservationApi.prototype.apiReservationActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Reservation/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Reservation/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ReservationApi.prototype.apiReservationByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Reservation/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiReservationByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ReservationApi.prototype.apiReservationByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Reservation/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationByNamePost=function(n,t){var r=this.basePath_+"/api/Reservation/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Reservation/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Reservation/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiReservationContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ReservationApi.prototype.apiReservationContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Reservation/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Reservation/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiReservationContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ReservationApi.prototype.apiReservationDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Reservation/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Reservation",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ReservationApi.prototype.apiReservationNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Reservation/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationPost=function(n,t){var r=this.basePath_+"/api/Reservation",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationPut=function(n,t){var r=this.basePath_+"/api/Reservation",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Reservation/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Reservation/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationApi.prototype.apiReservationTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Reservation/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.ReservationTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPReservationType");API.Client.ReservationTypeApi=function(n,t,i){this.basePath_=i.has("ReservationTypeApiBasePath")?i.get("ReservationTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("ReservationTypeApiDefaultHeaders")?i.get("ReservationTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.ReservationTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.ReservationTypeApi.prototype.apiReservationTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/ReservationType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ReservationType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ReservationTypeApi.prototype.apiReservationTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/ReservationType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.ReservationTypeApi.prototype.apiReservationTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/ReservationType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypeByNamePost=function(n,t){var r=this.basePath_+"/api/ReservationType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/ReservationType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/ReservationType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ReservationTypeApi.prototype.apiReservationTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/ReservationType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/ReservationType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.ReservationTypeApi.prototype.apiReservationTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/ReservationType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/ReservationType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.ReservationTypeApi.prototype.apiReservationTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/ReservationType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypePost=function(n,t){var r=this.basePath_+"/api/ReservationType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypePut=function(n,t){var r=this.basePath_+"/api/ReservationType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/ReservationType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/ReservationType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.ReservationTypeApi.prototype.apiReservationTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/ReservationType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiReservationTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.RuleApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPRule");API.Client.RuleApi=function(n,t,i){this.basePath_=i.has("RuleApiBasePath")?i.get("RuleApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("RuleApiDefaultHeaders")?i.get("RuleApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.RuleApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.RuleApi.prototype.apiRuleActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Rule/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRuleActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRuleActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Rule/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.RuleApi.prototype.apiRuleByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Rule/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiRuleByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.RuleApi.prototype.apiRuleByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Rule/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRuleByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRuleByNamePost=function(n,t){var r=this.basePath_+"/api/Rule/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRuleContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Rule/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRuleContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRuleContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Rule/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiRuleContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.RuleApi.prototype.apiRuleContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Rule/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRuleContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRuleContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Rule/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiRuleContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.RuleApi.prototype.apiRuleDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Rule/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRuleDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRuleGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Rule",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.RuleApi.prototype.apiRuleNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Rule/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRuleNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRulePost=function(n,t){var r=this.basePath_+"/api/Rule",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRulePut=function(n,t){var r=this.basePath_+"/api/Rule",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRuleRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Rule/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRuleRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRuleSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Rule/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRuleSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.RuleApi.prototype.apiRuleTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Rule/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiRuleTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.SaleApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPSale");API.Client.SaleApi=function(n,t,i){this.basePath_=i.has("SaleApiBasePath")?i.get("SaleApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("SaleApiDefaultHeaders")?i.get("SaleApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.SaleApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.SaleApi.prototype.apiSaleActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Sale/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSaleActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Sale/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SaleApi.prototype.apiSaleByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Sale/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiSaleByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.SaleApi.prototype.apiSaleByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Sale/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSaleByNamePost=function(n,t){var r=this.basePath_+"/api/Sale/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSaleContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Sale/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSaleContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Sale/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSaleContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SaleApi.prototype.apiSaleContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Sale/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSaleContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Sale/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSaleContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SaleApi.prototype.apiSaleDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Sale/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSaleGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Sale",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SaleApi.prototype.apiSaleNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Sale/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSalePost=function(n,t){var r=this.basePath_+"/api/Sale",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSalePut=function(n,t){var r=this.basePath_+"/api/Sale",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSaleRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Sale/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSaleSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Sale/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleApi.prototype.apiSaleTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Sale/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.SalesRequestApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPSalesRequest");API.Client.SalesRequestApi=function(n,t,i){this.basePath_=i.has("SalesRequestApiBasePath")?i.get("SalesRequestApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("SalesRequestApiDefaultHeaders")?i.get("SalesRequestApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.SalesRequestApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.SalesRequestApi.prototype.apiSalesRequestActivateByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequest/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/SalesRequest/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SalesRequestApi.prototype.apiSalesRequestByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/SalesRequest/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.SalesRequestApi.prototype.apiSalesRequestByNameByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequest/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestByNamePost=function(n,t){var r=this.basePath_+"/api/SalesRequest/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequest/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/SalesRequest/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SalesRequestApi.prototype.apiSalesRequestContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequest/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/SalesRequest/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SalesRequestApi.prototype.apiSalesRequestDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequest/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestGet=function(n,t,i,r,u){var o=this.basePath_+"/api/SalesRequest",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SalesRequestApi.prototype.apiSalesRequestNotesByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequest/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestPost=function(n,t){var r=this.basePath_+"/api/SalesRequest",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestPut=function(n,t){var r=this.basePath_+"/api/SalesRequest",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequest/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequest/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestApi.prototype.apiSalesRequestTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequest/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.SalesRequestTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPSalesRequestType");API.Client.SalesRequestTypeApi=function(n,t,i){this.basePath_=i.has("SalesRequestTypeApiBasePath")?i.get("SalesRequestTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("SalesRequestTypeApiDefaultHeaders")?i.get("SalesRequestTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.SalesRequestTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequestType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/SalesRequestType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/SalesRequestType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequestType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeByNamePost=function(n,t){var r=this.basePath_+"/api/SalesRequestType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequestType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/SalesRequestType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequestType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/SalesRequestType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequestType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/SalesRequestType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequestType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypePost=function(n,t){var r=this.basePath_+"/api/SalesRequestType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypePut=function(n,t){var r=this.basePath_+"/api/SalesRequestType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequestType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequestType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SalesRequestTypeApi.prototype.apiSalesRequestTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/SalesRequestType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSalesRequestTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.SaleStatusApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPSaleStatus");API.Client.SaleStatusApi=function(n,t,i){this.basePath_=i.has("SaleStatusApiBasePath")?i.get("SaleStatusApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("SaleStatusApiDefaultHeaders")?i.get("SaleStatusApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.SaleStatusApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.SaleStatusApi.prototype.apiSaleStatusActivateByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatus/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/SaleStatus/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SaleStatusApi.prototype.apiSaleStatusByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/SaleStatus/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.SaleStatusApi.prototype.apiSaleStatusByNameByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatus/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusByNamePost=function(n,t){var r=this.basePath_+"/api/SaleStatus/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatus/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/SaleStatus/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SaleStatusApi.prototype.apiSaleStatusContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatus/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/SaleStatus/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SaleStatusApi.prototype.apiSaleStatusDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatus/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusGet=function(n,t,i,r,u){var o=this.basePath_+"/api/SaleStatus",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SaleStatusApi.prototype.apiSaleStatusNotesByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatus/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusPost=function(n,t){var r=this.basePath_+"/api/SaleStatus",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusPut=function(n,t){var r=this.basePath_+"/api/SaleStatus",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatus/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatus/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusApi.prototype.apiSaleStatusTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatus/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.SaleStatusTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPSaleStatusType");API.Client.SaleStatusTypeApi=function(n,t,i){this.basePath_=i.has("SaleStatusTypeApiBasePath")?i.get("SaleStatusTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("SaleStatusTypeApiDefaultHeaders")?i.get("SaleStatusTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.SaleStatusTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatusType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/SaleStatusType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/SaleStatusType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatusType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeByNamePost=function(n,t){var r=this.basePath_+"/api/SaleStatusType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatusType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/SaleStatusType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatusType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/SaleStatusType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatusType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/SaleStatusType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatusType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypePost=function(n,t){var r=this.basePath_+"/api/SaleStatusType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypePut=function(n,t){var r=this.basePath_+"/api/SaleStatusType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatusType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatusType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SaleStatusTypeApi.prototype.apiSaleStatusTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/SaleStatusType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSaleStatusTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.SubscriptionApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPSubscription");API.Client.SubscriptionApi=function(n,t,i){this.basePath_=i.has("SubscriptionApiBasePath")?i.get("SubscriptionApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("SubscriptionApiDefaultHeaders")?i.get("SubscriptionApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.SubscriptionApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.SubscriptionApi.prototype.apiSubscriptionActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Subscription/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Subscription/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SubscriptionApi.prototype.apiSubscriptionByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Subscription/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.SubscriptionApi.prototype.apiSubscriptionByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Subscription/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionByNamePost=function(n,t){var r=this.basePath_+"/api/Subscription/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Subscription/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Subscription/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SubscriptionApi.prototype.apiSubscriptionContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Subscription/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Subscription/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.SubscriptionApi.prototype.apiSubscriptionDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Subscription/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Subscription",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.SubscriptionApi.prototype.apiSubscriptionNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Subscription/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionPost=function(n,t){var r=this.basePath_+"/api/Subscription",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionPut=function(n,t){var r=this.basePath_+"/api/Subscription",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Subscription/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Subscription/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.SubscriptionApi.prototype.apiSubscriptionTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Subscription/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiSubscriptionTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.TranslationApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPTranslation");API.Client.TranslationApi=function(n,t,i){this.basePath_=i.has("TranslationApiBasePath")?i.get("TranslationApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("TranslationApiDefaultHeaders")?i.get("TranslationApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.TranslationApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.TranslationApi.prototype.apiTranslationActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Translation/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiTranslationActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Translation/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.TranslationApi.prototype.apiTranslationByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Translation/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiTranslationByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.TranslationApi.prototype.apiTranslationByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Translation/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiTranslationByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationByNamePost=function(n,t){var r=this.basePath_+"/api/Translation/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Translation/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiTranslationContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Translation/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiTranslationContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.TranslationApi.prototype.apiTranslationContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Translation/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiTranslationContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Translation/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiTranslationContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.TranslationApi.prototype.apiTranslationDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Translation/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiTranslationDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Translation",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.TranslationApi.prototype.apiTranslationNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Translation/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiTranslationNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationPost=function(n,t){var r=this.basePath_+"/api/Translation",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationPut=function(n,t){var r=this.basePath_+"/api/Translation",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Translation/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiTranslationRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Translation/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiTranslationSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.TranslationApi.prototype.apiTranslationTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Translation/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiTranslationTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.UnitApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPUnit");API.Client.UnitApi=function(n,t,i){this.basePath_=i.has("UnitApiBasePath")?i.get("UnitApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("UnitApiDefaultHeaders")?i.get("UnitApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.UnitApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.UnitApi.prototype.apiUnitActivateByIdGet=function(n,t){var r=this.basePath_+"/api/Unit/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Unit/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.UnitApi.prototype.apiUnitByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/Unit/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiUnitByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.UnitApi.prototype.apiUnitByNameByIdGet=function(n,t){var r=this.basePath_+"/api/Unit/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitByNamePost=function(n,t){var r=this.basePath_+"/api/Unit/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/Unit/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/Unit/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiUnitContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.UnitApi.prototype.apiUnitContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/Unit/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/Unit/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiUnitContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.UnitApi.prototype.apiUnitDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/Unit/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitGet=function(n,t,i,r,u){var o=this.basePath_+"/api/Unit",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.UnitApi.prototype.apiUnitNotesByIdGet=function(n,t){var r=this.basePath_+"/api/Unit/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitPost=function(n,t){var r=this.basePath_+"/api/Unit",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitPut=function(n,t){var r=this.basePath_+"/api/Unit",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/Unit/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/Unit/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitApi.prototype.apiUnitTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/Unit/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.UnitStatusApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPUnitStatus");API.Client.UnitStatusApi=function(n,t,i){this.basePath_=i.has("UnitStatusApiBasePath")?i.get("UnitStatusApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("UnitStatusApiDefaultHeaders")?i.get("UnitStatusApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.UnitStatusApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.UnitStatusApi.prototype.apiUnitStatusActivateByIdGet=function(n,t){var r=this.basePath_+"/api/UnitStatus/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/UnitStatus/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.UnitStatusApi.prototype.apiUnitStatusByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/UnitStatus/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.UnitStatusApi.prototype.apiUnitStatusByNameByIdGet=function(n,t){var r=this.basePath_+"/api/UnitStatus/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusByNamePost=function(n,t){var r=this.basePath_+"/api/UnitStatus/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/UnitStatus/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/UnitStatus/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.UnitStatusApi.prototype.apiUnitStatusContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/UnitStatus/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/UnitStatus/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.UnitStatusApi.prototype.apiUnitStatusDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/UnitStatus/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusGet=function(n,t,i,r,u){var o=this.basePath_+"/api/UnitStatus",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.UnitStatusApi.prototype.apiUnitStatusNotesByIdGet=function(n,t){var r=this.basePath_+"/api/UnitStatus/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusPost=function(n,t){var r=this.basePath_+"/api/UnitStatus",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusPut=function(n,t){var r=this.basePath_+"/api/UnitStatus",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/UnitStatus/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/UnitStatus/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitStatusApi.prototype.apiUnitStatusTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/UnitStatus/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitStatusTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.UnitSubTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPUnitSubType");API.Client.UnitSubTypeApi=function(n,t,i){this.basePath_=i.has("UnitSubTypeApiBasePath")?i.get("UnitSubTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("UnitSubTypeApiDefaultHeaders")?i.get("UnitSubTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.UnitSubTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/UnitSubType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/UnitSubType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/UnitSubType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/UnitSubType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeByNamePost=function(n,t){var r=this.basePath_+"/api/UnitSubType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/UnitSubType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/UnitSubType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/UnitSubType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/UnitSubType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/UnitSubType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/UnitSubType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/UnitSubType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypePost=function(n,t){var r=this.basePath_+"/api/UnitSubType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypePut=function(n,t){var r=this.basePath_+"/api/UnitSubType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/UnitSubType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/UnitSubType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitSubTypeApi.prototype.apiUnitSubTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/UnitSubType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitSubTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};
/**
 * @license Use under Direct Portal License
 * http://wwww.direct-portal.com
 */
goog.provide("API.Client.UnitTypeApi");goog.require("API.Client.DPContactAddress");goog.require("API.Client.DPContactDetail");goog.require("API.Client.DPUnitType");API.Client.UnitTypeApi=function(n,t,i){this.basePath_=i.has("UnitTypeApiBasePath")?i.get("UnitTypeApiBasePath"):"https://localhost/";this.defaultHeaders_=i.has("UnitTypeApiDefaultHeaders")?i.get("UnitTypeApiDefaultHeaders"):{};this.http_=n;this.httpParamSerializer=i.get("$httpParamSerializer")};API.Client.UnitTypeApi.$inject=["$http","$httpParamSerializer","$injector"];API.Client.UnitTypeApi.prototype.apiUnitTypeActivateByIdGet=function(n,t){var r=this.basePath_+"/api/UnitType/Activate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeActivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypeActiveGet=function(n,t,i,r,u){var o=this.basePath_+"/api/UnitType/Active",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.UnitTypeApi.prototype.apiUnitTypeByIdGet=function(n,t,i,r,u,f){var s=this.basePath_+"/api/UnitType/{id}".replace("{id}",String(n)),e={},h=angular.extend({},this.defaultHeaders_),o;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeByIdGet");return t!==undefined&&(e.skip=t),i!==undefined&&(e.take=i),r!==undefined&&(e.fields=r),u!==undefined&&(e.include=u),o={method:"GET",url:s,json:!0,params:e,headers:h},f&&(o=angular.extend(o,f)),this.http_(o)};API.Client.UnitTypeApi.prototype.apiUnitTypeByNameByIdGet=function(n,t){var r=this.basePath_+"/api/UnitType/ByName/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeByNameByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypeByNamePost=function(n,t){var r=this.basePath_+"/api/UnitType/ByName",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypeContactAddressesByIdGet=function(n,t){var r=this.basePath_+"/api/UnitType/ContactAddresses/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeContactAddressesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypeContactAddressesByIdPost=function(n,t,i){var u=this.basePath_+"/api/UnitType/ContactAddresses/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeContactAddressesByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.UnitTypeApi.prototype.apiUnitTypeContactDetailsByIdGet=function(n,t){var r=this.basePath_+"/api/UnitType/ContactDetails/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeContactDetailsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypeContactDetailsByIdPost=function(n,t,i){var u=this.basePath_+"/api/UnitType/ContactDetails/{id}".replace("{id}",String(n)),f=angular.extend({},this.defaultHeaders_),r;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeContactDetailsByIdPost");return r={method:"POST",url:u,json:!0,data:t,params:{},headers:f},i&&(r=angular.extend(r,i)),this.http_(r)};API.Client.UnitTypeApi.prototype.apiUnitTypeDeactivateByIdGet=function(n,t){var r=this.basePath_+"/api/UnitType/Deactivate/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeDeactivateByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypeGet=function(n,t,i,r,u){var o=this.basePath_+"/api/UnitType",f={},s=angular.extend({},this.defaultHeaders_),e;return n!==undefined&&(f.skip=n),t!==undefined&&(f.take=t),i!==undefined&&(f.fields=i),r!==undefined&&(f.include=r),e={method:"GET",url:o,json:!0,params:f,headers:s},u&&(e=angular.extend(e,u)),this.http_(e)};API.Client.UnitTypeApi.prototype.apiUnitTypeNotesByIdGet=function(n,t){var r=this.basePath_+"/api/UnitType/Notes/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeNotesByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypePost=function(n,t){var r=this.basePath_+"/api/UnitType",u=angular.extend({},this.defaultHeaders_),i={method:"POST",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypePut=function(n,t){var r=this.basePath_+"/api/UnitType",u=angular.extend({},this.defaultHeaders_),i={method:"PUT",url:r,json:!0,data:n,params:{},headers:u};return t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypeRelationshipsByIdGet=function(n,t){var r=this.basePath_+"/api/UnitType/Relationships/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeRelationshipsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypeSetAsDefaultByIdGet=function(n,t){var r=this.basePath_+"/api/UnitType/SetAsDefault/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeSetAsDefaultByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};API.Client.UnitTypeApi.prototype.apiUnitTypeTranslationsByIdGet=function(n,t){var r=this.basePath_+"/api/UnitType/Translations/{id}".replace("{id}",String(n)),u=angular.extend({},this.defaultHeaders_),i;if(!n)throw new Error("Missing required parameter id when calling apiUnitTypeTranslationsByIdGet");return i={method:"GET",url:r,json:!0,params:{},headers:u},t&&(i=angular.extend(i,t)),this.http_(i)};